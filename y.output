Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | compound_stat
    9     | return_stat

   10 return_stat: RET initializer
   11            | RET expression_stat

   12 compound_stat: type ID LB func_declaration RB LCB mul_stat RCB
   13              | type ID LB RB LCB mul_stat RCB

   14 declaration: type ID ASGN initializer SEMICOLON
   15            | type ID SEMICOLON
   16            | type ID ASGN expression_stat SEMICOLON
   17            | type ID LB func_declaration RB SEMICOLON

   18 func_declaration: func_declaration COMMA type ID
   19                 | type ID

   20 func_call: func_call COMMA const
   21          | const

   22 const: I_CONST
   23      | F_CONST
   24      | S_CONST
   25      | ID

   26 expression: ID asgn expression_stat SEMICOLON
   27           | ID arithmetic_postfix SEMICOLON
   28           | ID LB func_call RB SEMICOLON
   29           | ID LB RB SEMICOLON
   30           | SEMICOLON

   31 expression_stat: expression_stat ADD mul_expression_stat
   32                | expression_stat SUB mul_expression_stat
   33                | mul_expression_stat

   34 mul_expression_stat: mul_expression_stat MUL factor
   35                    | mul_expression_stat DIV factor
   36                    | mul_expression_stat MOD factor
   37                    | factor

   38 factor: I_CONST
   39       | F_CONST
   40       | ID
   41       | LB expression_stat RB
   42       | ID arithmetic_postfix

   43 iteration_stat: WHILE LB iter_expression RB LCB mul_stat RCB
   44               | IF LB iter_expression RB LCB mul_stat RCB
   45               | IF LB iter_expression RB LCB mul_stat RCB ELSE else_stat
   46               | IF LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat else_stat

   47 iter_expression: I_CONST
   48                | ID relational factor

   49 mul_stat: stat mul_stat
   50         | stat

   51 elseif_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat
   52            | IF LB iter_expression RB LCB mul_stat RCB ELSE

   53 else_stat: LCB mul_stat RCB

   54 relational: MT
   55           | LT
   56           | MTE
   57           | LTE
   58           | EQ
   59           | NE

   60 print_func: PRINT LB S_CONST RB SEMICOLON
   61           | PRINT LB ID RB SEMICOLON

   62 comment_stat: CPLUS_COMMENT
   63             | START_COMMENT END_COMMENT

   64 initializer: S_CONST
   65            | TRUE
   66            | FALSE

   67 asgn: ASGN
   68     | ADDASGN
   69     | SUBASGN
   70     | MULASGN
   71     | DIVASGN
   72     | MODASGN

   73 arithmetic_postfix: INC
   74                   | DEC

   75 type: INT
   76     | FLOAT
   77     | BOOL
   78     | STRING
   79     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 75
FLOAT (259) 76
STRING (260) 78
BOOL (261) 77
VOID (262) 79
ADD (263) 31
SUB (264) 32
MUL (265) 34
DIV (266) 35
MOD (267) 36
INC (268) 73
DEC (269) 74
MT (270) 54
LT (271) 55
MTE (272) 56
LTE (273) 57
EQ (274) 58
NE (275) 59
ASGN (276) 14 16 67
ADDASGN (277) 68
SUBASGN (278) 69
MULASGN (279) 70
DIVASGN (280) 71
MODASGN (281) 72
AND (282)
OR (283)
NOT (284)
LB (285) 12 13 17 28 29 41 43 44 45 46 51 52 60 61
RB (286) 12 13 17 28 29 41 43 44 45 46 51 52 60 61
LCB (287) 12 13 43 44 45 46 51 52 53
RCB (288) 12 13 43 44 45 46 51 52 53
LSB (289)
RSB (290)
COMMA (291) 18 20
PRINT (292) 60 61
IF (293) 44 45 46 51 52
ELSE (294) 45 46 51 52
FOR (295)
WHILE (296) 43
ID (297) 12 13 14 15 16 17 18 19 25 26 27 28 29 40 42 48 61
SEMICOLON (298) 14 15 16 17 26 27 28 29 30 60 61
RET (299) 10 11
START_COMMENT (300) 63
END_COMMENT (301) 63
CPLUS_COMMENT (302) 62
I_CONST (303) 22 38 47
F_CONST (304) 23 39
S_CONST (305) 24 60 64
TRUE (306) 65
FALSE (307) 66


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8 9, on right: 1 49 50
return_stat (56)
    on left: 10 11, on right: 9
compound_stat (57)
    on left: 12 13, on right: 8
declaration (58)
    on left: 14 15 16 17, on right: 3
func_declaration (59)
    on left: 18 19, on right: 12 17 18
func_call (60)
    on left: 20 21, on right: 20 28
const (61)
    on left: 22 23 24 25, on right: 20 21
expression (62)
    on left: 26 27 28 29 30, on right: 4
expression_stat (63)
    on left: 31 32 33, on right: 11 16 26 31 32 41
mul_expression_stat (64)
    on left: 34 35 36 37, on right: 31 32 33 34 35 36
factor (65)
    on left: 38 39 40 41 42, on right: 34 35 36 37 48
iteration_stat (66)
    on left: 43 44 45 46, on right: 5
iter_expression (67)
    on left: 47 48, on right: 43 44 45 46 51 52
mul_stat (68)
    on left: 49 50, on right: 12 13 43 44 45 46 49 51 52 53
elseif_stat (69)
    on left: 51 52, on right: 46 51
else_stat (70)
    on left: 53, on right: 45 46
relational (71)
    on left: 54 55 56 57 58 59, on right: 48
print_func (72)
    on left: 60 61, on right: 6
comment_stat (73)
    on left: 62 63, on right: 7
initializer (74)
    on left: 64 65 66, on right: 10 14
asgn (75)
    on left: 67 68 69 70 71 72, on right: 26
arithmetic_postfix (76)
    on left: 73 74, on right: 27 42
type (77)
    on left: 75 76 77 78 79, on right: 12 13 14 15 16 17 18 19


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 2

    0 $accept: program $end .

    $default  accept


State 3

   75 type: INT .

    $default  reduce using rule 75 (type)


State 4

   76 type: FLOAT .

    $default  reduce using rule 76 (type)


State 5

   78 type: STRING .

    $default  reduce using rule 78 (type)


State 6

   77 type: BOOL .

    $default  reduce using rule 77 (type)


State 7

   79 type: VOID .

    $default  reduce using rule 79 (type)


State 8

   60 print_func: PRINT . LB S_CONST RB SEMICOLON
   61           | PRINT . LB ID RB SEMICOLON

    LB  shift, and go to state 25


State 9

   44 iteration_stat: IF . LB iter_expression RB LCB mul_stat RCB
   45               | IF . LB iter_expression RB LCB mul_stat RCB ELSE else_stat
   46               | IF . LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat else_stat

    LB  shift, and go to state 26


State 10

   43 iteration_stat: WHILE . LB iter_expression RB LCB mul_stat RCB

    LB  shift, and go to state 27


State 11

   26 expression: ID . asgn expression_stat SEMICOLON
   27           | ID . arithmetic_postfix SEMICOLON
   28           | ID . LB func_call RB SEMICOLON
   29           | ID . LB RB SEMICOLON

    INC      shift, and go to state 28
    DEC      shift, and go to state 29
    ASGN     shift, and go to state 30
    ADDASGN  shift, and go to state 31
    SUBASGN  shift, and go to state 32
    MULASGN  shift, and go to state 33
    DIVASGN  shift, and go to state 34
    MODASGN  shift, and go to state 35
    LB       shift, and go to state 36

    asgn                go to state 37
    arithmetic_postfix  go to state 38


State 12

   30 expression: SEMICOLON .

    $default  reduce using rule 30 (expression)


State 13

   10 return_stat: RET . initializer
   11            | RET . expression_stat

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45

    expression_stat      go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 49


State 14

   63 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 50


State 15

   62 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 62 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    9 stat: return_stat .

    $default  reduce using rule 9 (stat)


State 18

    8 stat: compound_stat .

    $default  reduce using rule 8 (stat)


State 19

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 20

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 21

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 22

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 23

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 24

   12 compound_stat: type . ID LB func_declaration RB LCB mul_stat RCB
   13              | type . ID LB RB LCB mul_stat RCB
   14 declaration: type . ID ASGN initializer SEMICOLON
   15            | type . ID SEMICOLON
   16            | type . ID ASGN expression_stat SEMICOLON
   17            | type . ID LB func_declaration RB SEMICOLON

    ID  shift, and go to state 51


State 25

   60 print_func: PRINT LB . S_CONST RB SEMICOLON
   61           | PRINT LB . ID RB SEMICOLON

    ID       shift, and go to state 52
    S_CONST  shift, and go to state 53


State 26

   44 iteration_stat: IF LB . iter_expression RB LCB mul_stat RCB
   45               | IF LB . iter_expression RB LCB mul_stat RCB ELSE else_stat
   46               | IF LB . iter_expression RB LCB mul_stat RCB ELSE elseif_stat else_stat

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 56


State 27

   43 iteration_stat: WHILE LB . iter_expression RB LCB mul_stat RCB

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 57


State 28

   73 arithmetic_postfix: INC .

    $default  reduce using rule 73 (arithmetic_postfix)


State 29

   74 arithmetic_postfix: DEC .

    $default  reduce using rule 74 (arithmetic_postfix)


State 30

   67 asgn: ASGN .

    $default  reduce using rule 67 (asgn)


State 31

   68 asgn: ADDASGN .

    $default  reduce using rule 68 (asgn)


State 32

   69 asgn: SUBASGN .

    $default  reduce using rule 69 (asgn)


State 33

   70 asgn: MULASGN .

    $default  reduce using rule 70 (asgn)


State 34

   71 asgn: DIVASGN .

    $default  reduce using rule 71 (asgn)


State 35

   72 asgn: MODASGN .

    $default  reduce using rule 72 (asgn)


State 36

   28 expression: ID LB . func_call RB SEMICOLON
   29           | ID LB . RB SEMICOLON

    RB       shift, and go to state 58
    ID       shift, and go to state 59
    I_CONST  shift, and go to state 60
    F_CONST  shift, and go to state 61
    S_CONST  shift, and go to state 62

    func_call  go to state 63
    const      go to state 64


State 37

   26 expression: ID asgn . expression_stat SEMICOLON

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 65
    mul_expression_stat  go to state 47
    factor               go to state 48


State 38

   27 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 39

   41 factor: LB . expression_stat RB

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 67
    mul_expression_stat  go to state 47
    factor               go to state 48


State 40

   40 factor: ID .
   42       | ID . arithmetic_postfix

    INC  shift, and go to state 28
    DEC  shift, and go to state 29

    $default  reduce using rule 40 (factor)

    arithmetic_postfix  go to state 68


State 41

   38 factor: I_CONST .

    $default  reduce using rule 38 (factor)


State 42

   39 factor: F_CONST .

    $default  reduce using rule 39 (factor)


State 43

   64 initializer: S_CONST .

    $default  reduce using rule 64 (initializer)


State 44

   65 initializer: TRUE .

    $default  reduce using rule 65 (initializer)


State 45

   66 initializer: FALSE .

    $default  reduce using rule 66 (initializer)


State 46

   11 return_stat: RET expression_stat .
   31 expression_stat: expression_stat . ADD mul_expression_stat
   32                | expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70

    $default  reduce using rule 11 (return_stat)


State 47

   33 expression_stat: mul_expression_stat .
   34 mul_expression_stat: mul_expression_stat . MUL factor
   35                    | mul_expression_stat . DIV factor
   36                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 33 (expression_stat)


State 48

   37 mul_expression_stat: factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 49

   10 return_stat: RET initializer .

    $default  reduce using rule 10 (return_stat)


State 50

   63 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 63 (comment_stat)


State 51

   12 compound_stat: type ID . LB func_declaration RB LCB mul_stat RCB
   13              | type ID . LB RB LCB mul_stat RCB
   14 declaration: type ID . ASGN initializer SEMICOLON
   15            | type ID . SEMICOLON
   16            | type ID . ASGN expression_stat SEMICOLON
   17            | type ID . LB func_declaration RB SEMICOLON

    ASGN       shift, and go to state 74
    LB         shift, and go to state 75
    SEMICOLON  shift, and go to state 76


State 52

   61 print_func: PRINT LB ID . RB SEMICOLON

    RB  shift, and go to state 77


State 53

   60 print_func: PRINT LB S_CONST . RB SEMICOLON

    RB  shift, and go to state 78


State 54

   48 iter_expression: ID . relational factor

    MT   shift, and go to state 79
    LT   shift, and go to state 80
    MTE  shift, and go to state 81
    LTE  shift, and go to state 82
    EQ   shift, and go to state 83
    NE   shift, and go to state 84

    relational  go to state 85


State 55

   47 iter_expression: I_CONST .

    $default  reduce using rule 47 (iter_expression)


State 56

   44 iteration_stat: IF LB iter_expression . RB LCB mul_stat RCB
   45               | IF LB iter_expression . RB LCB mul_stat RCB ELSE else_stat
   46               | IF LB iter_expression . RB LCB mul_stat RCB ELSE elseif_stat else_stat

    RB  shift, and go to state 86


State 57

   43 iteration_stat: WHILE LB iter_expression . RB LCB mul_stat RCB

    RB  shift, and go to state 87


State 58

   29 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 59

   25 const: ID .

    $default  reduce using rule 25 (const)


State 60

   22 const: I_CONST .

    $default  reduce using rule 22 (const)


State 61

   23 const: F_CONST .

    $default  reduce using rule 23 (const)


State 62

   24 const: S_CONST .

    $default  reduce using rule 24 (const)


State 63

   20 func_call: func_call . COMMA const
   28 expression: ID LB func_call . RB SEMICOLON

    RB     shift, and go to state 89
    COMMA  shift, and go to state 90


State 64

   21 func_call: const .

    $default  reduce using rule 21 (func_call)


State 65

   26 expression: ID asgn expression_stat . SEMICOLON
   31 expression_stat: expression_stat . ADD mul_expression_stat
   32                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    SEMICOLON  shift, and go to state 91


State 66

   27 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 27 (expression)


State 67

   31 expression_stat: expression_stat . ADD mul_expression_stat
   32                | expression_stat . SUB mul_expression_stat
   41 factor: LB expression_stat . RB

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    RB   shift, and go to state 92


State 68

   42 factor: ID arithmetic_postfix .

    $default  reduce using rule 42 (factor)


State 69

   31 expression_stat: expression_stat ADD . mul_expression_stat

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    mul_expression_stat  go to state 93
    factor               go to state 48


State 70

   32 expression_stat: expression_stat SUB . mul_expression_stat

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    mul_expression_stat  go to state 94
    factor               go to state 48


State 71

   34 mul_expression_stat: mul_expression_stat MUL . factor

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 95


State 72

   35 mul_expression_stat: mul_expression_stat DIV . factor

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 96


State 73

   36 mul_expression_stat: mul_expression_stat MOD . factor

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 97


State 74

   14 declaration: type ID ASGN . initializer SEMICOLON
   16            | type ID ASGN . expression_stat SEMICOLON

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45

    expression_stat      go to state 98
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 99


State 75

   12 compound_stat: type ID LB . func_declaration RB LCB mul_stat RCB
   13              | type ID LB . RB LCB mul_stat RCB
   17 declaration: type ID LB . func_declaration RB SEMICOLON

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 100

    func_declaration  go to state 101
    type              go to state 102


State 76

   15 declaration: type ID SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 77

   61 print_func: PRINT LB ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 78

   60 print_func: PRINT LB S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 79

   54 relational: MT .

    $default  reduce using rule 54 (relational)


State 80

   55 relational: LT .

    $default  reduce using rule 55 (relational)


State 81

   56 relational: MTE .

    $default  reduce using rule 56 (relational)


State 82

   57 relational: LTE .

    $default  reduce using rule 57 (relational)


State 83

   58 relational: EQ .

    $default  reduce using rule 58 (relational)


State 84

   59 relational: NE .

    $default  reduce using rule 59 (relational)


State 85

   48 iter_expression: ID relational . factor

    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 105


State 86

   44 iteration_stat: IF LB iter_expression RB . LCB mul_stat RCB
   45               | IF LB iter_expression RB . LCB mul_stat RCB ELSE else_stat
   46               | IF LB iter_expression RB . LCB mul_stat RCB ELSE elseif_stat else_stat

    LCB  shift, and go to state 106


State 87

   43 iteration_stat: WHILE LB iter_expression RB . LCB mul_stat RCB

    LCB  shift, and go to state 107


State 88

   29 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 29 (expression)


State 89

   28 expression: ID LB func_call RB . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 90

   20 func_call: func_call COMMA . const

    ID       shift, and go to state 59
    I_CONST  shift, and go to state 60
    F_CONST  shift, and go to state 61
    S_CONST  shift, and go to state 62

    const  go to state 109


State 91

   26 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 26 (expression)


State 92

   41 factor: LB expression_stat RB .

    $default  reduce using rule 41 (factor)


State 93

   31 expression_stat: expression_stat ADD mul_expression_stat .
   34 mul_expression_stat: mul_expression_stat . MUL factor
   35                    | mul_expression_stat . DIV factor
   36                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 31 (expression_stat)


State 94

   32 expression_stat: expression_stat SUB mul_expression_stat .
   34 mul_expression_stat: mul_expression_stat . MUL factor
   35                    | mul_expression_stat . DIV factor
   36                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 32 (expression_stat)


State 95

   34 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 34 (mul_expression_stat)


State 96

   35 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 35 (mul_expression_stat)


State 97

   36 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 36 (mul_expression_stat)


State 98

   16 declaration: type ID ASGN expression_stat . SEMICOLON
   31 expression_stat: expression_stat . ADD mul_expression_stat
   32                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    SEMICOLON  shift, and go to state 110


State 99

   14 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 100

   13 compound_stat: type ID LB RB . LCB mul_stat RCB

    LCB  shift, and go to state 112


State 101

   12 compound_stat: type ID LB func_declaration . RB LCB mul_stat RCB
   17 declaration: type ID LB func_declaration . RB SEMICOLON
   18 func_declaration: func_declaration . COMMA type ID

    RB     shift, and go to state 113
    COMMA  shift, and go to state 114


State 102

   19 func_declaration: type . ID

    ID  shift, and go to state 115


State 103

   61 print_func: PRINT LB ID RB SEMICOLON .

    $default  reduce using rule 61 (print_func)


State 104

   60 print_func: PRINT LB S_CONST RB SEMICOLON .

    $default  reduce using rule 60 (print_func)


State 105

   48 iter_expression: ID relational factor .

    $default  reduce using rule 48 (iter_expression)


State 106

   44 iteration_stat: IF LB iter_expression RB LCB . mul_stat RCB
   45               | IF LB iter_expression RB LCB . mul_stat RCB ELSE else_stat
   46               | IF LB iter_expression RB LCB . mul_stat RCB ELSE elseif_stat else_stat

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 117
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 107

   43 iteration_stat: WHILE LB iter_expression RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 118
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 108

   28 expression: ID LB func_call RB SEMICOLON .

    $default  reduce using rule 28 (expression)


State 109

   20 func_call: func_call COMMA const .

    $default  reduce using rule 20 (func_call)


State 110

   16 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 111

   14 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 14 (declaration)


State 112

   13 compound_stat: type ID LB RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 119
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 113

   12 compound_stat: type ID LB func_declaration RB . LCB mul_stat RCB
   17 declaration: type ID LB func_declaration RB . SEMICOLON

    LCB        shift, and go to state 120
    SEMICOLON  shift, and go to state 121


State 114

   18 func_declaration: func_declaration COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 122


State 115

   19 func_declaration: type ID .

    $default  reduce using rule 19 (func_declaration)


State 116

   49 mul_stat: stat . mul_stat
   50         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 50 (mul_stat)

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 123
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 117

   44 iteration_stat: IF LB iter_expression RB LCB mul_stat . RCB
   45               | IF LB iter_expression RB LCB mul_stat . RCB ELSE else_stat
   46               | IF LB iter_expression RB LCB mul_stat . RCB ELSE elseif_stat else_stat

    RCB  shift, and go to state 124


State 118

   43 iteration_stat: WHILE LB iter_expression RB LCB mul_stat . RCB

    RCB  shift, and go to state 125


State 119

   13 compound_stat: type ID LB RB LCB mul_stat . RCB

    RCB  shift, and go to state 126


State 120

   12 compound_stat: type ID LB func_declaration RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 127
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 121

   17 declaration: type ID LB func_declaration RB SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 122

   18 func_declaration: func_declaration COMMA type . ID

    ID  shift, and go to state 128


State 123

   49 mul_stat: stat mul_stat .

    $default  reduce using rule 49 (mul_stat)


State 124

   44 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB .
   45               | IF LB iter_expression RB LCB mul_stat RCB . ELSE else_stat
   46               | IF LB iter_expression RB LCB mul_stat RCB . ELSE elseif_stat else_stat

    ELSE  shift, and go to state 129

    $default  reduce using rule 44 (iteration_stat)


State 125

   43 iteration_stat: WHILE LB iter_expression RB LCB mul_stat RCB .

    $default  reduce using rule 43 (iteration_stat)


State 126

   13 compound_stat: type ID LB RB LCB mul_stat RCB .

    $default  reduce using rule 13 (compound_stat)


State 127

   12 compound_stat: type ID LB func_declaration RB LCB mul_stat . RCB

    RCB  shift, and go to state 130


State 128

   18 func_declaration: func_declaration COMMA type ID .

    $default  reduce using rule 18 (func_declaration)


State 129

   45 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE . else_stat
   46               | IF LB iter_expression RB LCB mul_stat RCB ELSE . elseif_stat else_stat

    LCB  shift, and go to state 131
    IF   shift, and go to state 132

    elseif_stat  go to state 133
    else_stat    go to state 134


State 130

   12 compound_stat: type ID LB func_declaration RB LCB mul_stat RCB .

    $default  reduce using rule 12 (compound_stat)


State 131

   53 else_stat: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 135
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 132

   51 elseif_stat: IF . LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat
   52            | IF . LB iter_expression RB LCB mul_stat RCB ELSE

    LB  shift, and go to state 136


State 133

   46 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat . else_stat

    LCB  shift, and go to state 131

    else_stat  go to state 137


State 134

   45 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE else_stat .

    $default  reduce using rule 45 (iteration_stat)


State 135

   53 else_stat: LCB mul_stat . RCB

    RCB  shift, and go to state 138


State 136

   51 elseif_stat: IF LB . iter_expression RB LCB mul_stat RCB ELSE elseif_stat
   52            | IF LB . iter_expression RB LCB mul_stat RCB ELSE

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 139


State 137

   46 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat else_stat .

    $default  reduce using rule 46 (iteration_stat)


State 138

   53 else_stat: LCB mul_stat RCB .

    $default  reduce using rule 53 (else_stat)


State 139

   51 elseif_stat: IF LB iter_expression . RB LCB mul_stat RCB ELSE elseif_stat
   52            | IF LB iter_expression . RB LCB mul_stat RCB ELSE

    RB  shift, and go to state 140


State 140

   51 elseif_stat: IF LB iter_expression RB . LCB mul_stat RCB ELSE elseif_stat
   52            | IF LB iter_expression RB . LCB mul_stat RCB ELSE

    LCB  shift, and go to state 141


State 141

   51 elseif_stat: IF LB iter_expression RB LCB . mul_stat RCB ELSE elseif_stat
   52            | IF LB iter_expression RB LCB . mul_stat RCB ELSE

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 116
    return_stat     go to state 17
    compound_stat   go to state 18
    declaration     go to state 19
    expression      go to state 20
    iteration_stat  go to state 21
    mul_stat        go to state 142
    print_func      go to state 22
    comment_stat    go to state 23
    type            go to state 24


State 142

   51 elseif_stat: IF LB iter_expression RB LCB mul_stat . RCB ELSE elseif_stat
   52            | IF LB iter_expression RB LCB mul_stat . RCB ELSE

    RCB  shift, and go to state 143


State 143

   51 elseif_stat: IF LB iter_expression RB LCB mul_stat RCB . ELSE elseif_stat
   52            | IF LB iter_expression RB LCB mul_stat RCB . ELSE

    ELSE  shift, and go to state 144


State 144

   51 elseif_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE . elseif_stat
   52            | IF LB iter_expression RB LCB mul_stat RCB ELSE .

    IF  shift, and go to state 132

    $default  reduce using rule 52 (elseif_stat)

    elseif_stat  go to state 145


State 145

   51 elseif_stat: IF LB iter_expression RB LCB mul_stat RCB ELSE elseif_stat .

    $default  reduce using rule 51 (elseif_stat)
