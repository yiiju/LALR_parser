Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | RET return_stat

    9 return_stat: initializer SEMICOLON
   10            | expression_stat SEMICOLON

   11 func: func_parameter RB func_end
   12     | RB LCB mul_stat RCB

   13 func_end: SEMICOLON
   14         | LCB mul_stat RCB

   15 declaration: type ID ASGN initializer SEMICOLON
   16            | type ID SEMICOLON
   17            | type ID ASGN expression_stat SEMICOLON

   18 $@1: %empty

   19 declaration: type ID LB $@1 func

   20 func_parameter: func_parameter COMMA type ID
   21               | type ID

   22 func_call: func_call COMMA const
   23          | const

   24 const: I_CONST
   25      | F_CONST
   26      | S_CONST
   27      | ID

   28 expression: ID asgn expression_stat SEMICOLON
   29           | ID arithmetic_postfix SEMICOLON
   30           | ID LB func_call RB SEMICOLON
   31           | ID LB RB SEMICOLON
   32           | SEMICOLON

   33 expression_stat: expression_stat ADD mul_expression_stat
   34                | expression_stat SUB mul_expression_stat
   35                | mul_expression_stat

   36 mul_expression_stat: mul_expression_stat MUL factor
   37                    | mul_expression_stat DIV factor
   38                    | mul_expression_stat MOD factor
   39                    | factor

   40 factor: I_CONST
   41       | F_CONST
   42       | ID
   43       | LB expression_stat RB
   44       | ID arithmetic_postfix

   45 $@2: %empty

   46 iteration_stat: WHILE LB iter_expression RB LCB $@2 mul_stat RCB

   47 $@3: %empty

   48 $@4: %empty

   49 iteration_stat: IF LB iter_expression RB LCB $@3 mul_stat RCB $@4 haselse

   50 $@5: %empty

   51 haselse: ELSE haselseif LCB $@5 mul_stat RCB
   52        | %empty

   53 haselseif: IF LB iter_expression RB LCB mul_stat RCB moreelseif
   54          | %empty

   55 moreelseif: ELSE haselseif
   56           | %empty

   57 iter_expression: I_CONST
   58                | ID relational factor

   59 mul_stat: stat mul_stat
   60         | stat

   61 relational: MT
   62           | LT
   63           | MTE
   64           | LTE
   65           | EQ
   66           | NE

   67 print_func: PRINT LB print_type

   68 print_type: S_CONST RB SEMICOLON
   69           | ID RB SEMICOLON

   70 comment_stat: CPLUS_COMMENT
   71             | START_COMMENT END_COMMENT

   72 initializer: S_CONST
   73            | TRUE
   74            | FALSE

   75 asgn: ASGN
   76     | ADDASGN
   77     | SUBASGN
   78     | MULASGN
   79     | DIVASGN
   80     | MODASGN

   81 arithmetic_postfix: INC
   82                   | DEC

   83 type: INT
   84     | FLOAT
   85     | BOOL
   86     | STRING
   87     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 83
FLOAT (259) 84
STRING (260) 86
BOOL (261) 85
VOID (262) 87
ADD (263) 33
SUB (264) 34
MUL (265) 36
DIV (266) 37
MOD (267) 38
INC (268) 81
DEC (269) 82
MT (270) 61
LT (271) 62
MTE (272) 63
LTE (273) 64
EQ (274) 65
NE (275) 66
ASGN (276) 15 17 75
ADDASGN (277) 76
SUBASGN (278) 77
MULASGN (279) 78
DIVASGN (280) 79
MODASGN (281) 80
AND (282)
OR (283)
NOT (284)
LB (285) 19 30 31 43 46 49 53 67
RB (286) 11 12 30 31 43 46 49 53 68 69
LCB (287) 12 14 46 49 51 53
RCB (288) 12 14 46 49 51 53
LSB (289)
RSB (290)
COMMA (291) 20 22
PRINT (292) 67
IF (293) 49 53
ELSE (294) 51 55
FOR (295)
WHILE (296) 46
ID (297) 15 16 17 19 20 21 27 28 29 30 31 42 44 58 69
SEMICOLON (298) 9 10 13 15 16 17 28 29 30 31 32 68 69
RET (299) 8
START_COMMENT (300) 71
END_COMMENT (301) 71
CPLUS_COMMENT (302) 70
I_CONST (303) 24 40 57
F_CONST (304) 25 41
S_CONST (305) 26 68 72
TRUE (306) 73
FALSE (307) 74


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8, on right: 1 59 60
return_stat (56)
    on left: 9 10, on right: 8
func (57)
    on left: 11 12, on right: 19
func_end (58)
    on left: 13 14, on right: 11
declaration (59)
    on left: 15 16 17 19, on right: 3
$@1 (60)
    on left: 18, on right: 19
func_parameter (61)
    on left: 20 21, on right: 11 20
func_call (62)
    on left: 22 23, on right: 22 30
const (63)
    on left: 24 25 26 27, on right: 22 23
expression (64)
    on left: 28 29 30 31 32, on right: 4
expression_stat (65)
    on left: 33 34 35, on right: 10 17 28 33 34 43
mul_expression_stat (66)
    on left: 36 37 38 39, on right: 33 34 35 36 37 38
factor (67)
    on left: 40 41 42 43 44, on right: 36 37 38 39 58
iteration_stat (68)
    on left: 46 49, on right: 5
$@2 (69)
    on left: 45, on right: 46
$@3 (70)
    on left: 47, on right: 49
$@4 (71)
    on left: 48, on right: 49
haselse (72)
    on left: 51 52, on right: 49
$@5 (73)
    on left: 50, on right: 51
haselseif (74)
    on left: 53 54, on right: 51 55
moreelseif (75)
    on left: 55 56, on right: 53
iter_expression (76)
    on left: 57 58, on right: 46 49 53
mul_stat (77)
    on left: 59 60, on right: 12 14 46 49 51 53 59
relational (78)
    on left: 61 62 63 64 65 66, on right: 58
print_func (79)
    on left: 67, on right: 6
print_type (80)
    on left: 68 69, on right: 67
comment_stat (81)
    on left: 70 71, on right: 7
initializer (82)
    on left: 72 73 74, on right: 9 15
asgn (83)
    on left: 75 76 77 78 79 80, on right: 28
arithmetic_postfix (84)
    on left: 81 82, on right: 29 44
type (85)
    on left: 83 84 85 86 87, on right: 15 16 17 19 20 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 2

    0 $accept: program $end .

    $default  accept


State 3

   83 type: INT .

    $default  reduce using rule 83 (type)


State 4

   84 type: FLOAT .

    $default  reduce using rule 84 (type)


State 5

   86 type: STRING .

    $default  reduce using rule 86 (type)


State 6

   85 type: BOOL .

    $default  reduce using rule 85 (type)


State 7

   87 type: VOID .

    $default  reduce using rule 87 (type)


State 8

   67 print_func: PRINT . LB print_type

    LB  shift, and go to state 23


State 9

   49 iteration_stat: IF . LB iter_expression RB LCB $@3 mul_stat RCB $@4 haselse

    LB  shift, and go to state 24


State 10

   46 iteration_stat: WHILE . LB iter_expression RB LCB $@2 mul_stat RCB

    LB  shift, and go to state 25


State 11

   28 expression: ID . asgn expression_stat SEMICOLON
   29           | ID . arithmetic_postfix SEMICOLON
   30           | ID . LB func_call RB SEMICOLON
   31           | ID . LB RB SEMICOLON

    INC      shift, and go to state 26
    DEC      shift, and go to state 27
    ASGN     shift, and go to state 28
    ADDASGN  shift, and go to state 29
    SUBASGN  shift, and go to state 30
    MULASGN  shift, and go to state 31
    DIVASGN  shift, and go to state 32
    MODASGN  shift, and go to state 33
    LB       shift, and go to state 34

    asgn                go to state 35
    arithmetic_postfix  go to state 36


State 12

   32 expression: SEMICOLON .

    $default  reduce using rule 32 (expression)


State 13

    8 stat: RET . return_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    return_stat          go to state 44
    expression_stat      go to state 45
    mul_expression_stat  go to state 46
    factor               go to state 47
    initializer          go to state 48


State 14

   71 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 49


State 15

   70 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 70 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 18

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 19

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 20

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 21

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 22

   15 declaration: type . ID ASGN initializer SEMICOLON
   16            | type . ID SEMICOLON
   17            | type . ID ASGN expression_stat SEMICOLON
   19            | type . ID LB $@1 func

    ID  shift, and go to state 50


State 23

   67 print_func: PRINT LB . print_type

    ID       shift, and go to state 51
    S_CONST  shift, and go to state 52

    print_type  go to state 53


State 24

   49 iteration_stat: IF LB . iter_expression RB LCB $@3 mul_stat RCB $@4 haselse

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 56


State 25

   46 iteration_stat: WHILE LB . iter_expression RB LCB $@2 mul_stat RCB

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 57


State 26

   81 arithmetic_postfix: INC .

    $default  reduce using rule 81 (arithmetic_postfix)


State 27

   82 arithmetic_postfix: DEC .

    $default  reduce using rule 82 (arithmetic_postfix)


State 28

   75 asgn: ASGN .

    $default  reduce using rule 75 (asgn)


State 29

   76 asgn: ADDASGN .

    $default  reduce using rule 76 (asgn)


State 30

   77 asgn: SUBASGN .

    $default  reduce using rule 77 (asgn)


State 31

   78 asgn: MULASGN .

    $default  reduce using rule 78 (asgn)


State 32

   79 asgn: DIVASGN .

    $default  reduce using rule 79 (asgn)


State 33

   80 asgn: MODASGN .

    $default  reduce using rule 80 (asgn)


State 34

   30 expression: ID LB . func_call RB SEMICOLON
   31           | ID LB . RB SEMICOLON

    RB       shift, and go to state 58
    ID       shift, and go to state 59
    I_CONST  shift, and go to state 60
    F_CONST  shift, and go to state 61
    S_CONST  shift, and go to state 62

    func_call  go to state 63
    const      go to state 64


State 35

   28 expression: ID asgn . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 65
    mul_expression_stat  go to state 46
    factor               go to state 47


State 36

   29 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 37

   43 factor: LB . expression_stat RB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 67
    mul_expression_stat  go to state 46
    factor               go to state 47


State 38

   42 factor: ID .
   44       | ID . arithmetic_postfix

    INC  shift, and go to state 26
    DEC  shift, and go to state 27

    $default  reduce using rule 42 (factor)

    arithmetic_postfix  go to state 68


State 39

   40 factor: I_CONST .

    $default  reduce using rule 40 (factor)


State 40

   41 factor: F_CONST .

    $default  reduce using rule 41 (factor)


State 41

   72 initializer: S_CONST .

    $default  reduce using rule 72 (initializer)


State 42

   73 initializer: TRUE .

    $default  reduce using rule 73 (initializer)


State 43

   74 initializer: FALSE .

    $default  reduce using rule 74 (initializer)


State 44

    8 stat: RET return_stat .

    $default  reduce using rule 8 (stat)


State 45

   10 return_stat: expression_stat . SEMICOLON
   33 expression_stat: expression_stat . ADD mul_expression_stat
   34                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    SEMICOLON  shift, and go to state 71


State 46

   35 expression_stat: mul_expression_stat .
   36 mul_expression_stat: mul_expression_stat . MUL factor
   37                    | mul_expression_stat . DIV factor
   38                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    $default  reduce using rule 35 (expression_stat)


State 47

   39 mul_expression_stat: factor .

    $default  reduce using rule 39 (mul_expression_stat)


State 48

    9 return_stat: initializer . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 49

   71 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 71 (comment_stat)


State 50

   15 declaration: type ID . ASGN initializer SEMICOLON
   16            | type ID . SEMICOLON
   17            | type ID . ASGN expression_stat SEMICOLON
   19            | type ID . LB $@1 func

    ASGN       shift, and go to state 76
    LB         shift, and go to state 77
    SEMICOLON  shift, and go to state 78


State 51

   69 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 79


State 52

   68 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 80


State 53

   67 print_func: PRINT LB print_type .

    $default  reduce using rule 67 (print_func)


State 54

   58 iter_expression: ID . relational factor

    MT   shift, and go to state 81
    LT   shift, and go to state 82
    MTE  shift, and go to state 83
    LTE  shift, and go to state 84
    EQ   shift, and go to state 85
    NE   shift, and go to state 86

    relational  go to state 87


State 55

   57 iter_expression: I_CONST .

    $default  reduce using rule 57 (iter_expression)


State 56

   49 iteration_stat: IF LB iter_expression . RB LCB $@3 mul_stat RCB $@4 haselse

    RB  shift, and go to state 88


State 57

   46 iteration_stat: WHILE LB iter_expression . RB LCB $@2 mul_stat RCB

    RB  shift, and go to state 89


State 58

   31 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 59

   27 const: ID .

    $default  reduce using rule 27 (const)


State 60

   24 const: I_CONST .

    $default  reduce using rule 24 (const)


State 61

   25 const: F_CONST .

    $default  reduce using rule 25 (const)


State 62

   26 const: S_CONST .

    $default  reduce using rule 26 (const)


State 63

   22 func_call: func_call . COMMA const
   30 expression: ID LB func_call . RB SEMICOLON

    RB     shift, and go to state 91
    COMMA  shift, and go to state 92


State 64

   23 func_call: const .

    $default  reduce using rule 23 (func_call)


State 65

   28 expression: ID asgn expression_stat . SEMICOLON
   33 expression_stat: expression_stat . ADD mul_expression_stat
   34                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    SEMICOLON  shift, and go to state 93


State 66

   29 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 29 (expression)


State 67

   33 expression_stat: expression_stat . ADD mul_expression_stat
   34                | expression_stat . SUB mul_expression_stat
   43 factor: LB expression_stat . RB

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    RB   shift, and go to state 94


State 68

   44 factor: ID arithmetic_postfix .

    $default  reduce using rule 44 (factor)


State 69

   33 expression_stat: expression_stat ADD . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 95
    factor               go to state 47


State 70

   34 expression_stat: expression_stat SUB . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 96
    factor               go to state 47


State 71

   10 return_stat: expression_stat SEMICOLON .

    $default  reduce using rule 10 (return_stat)


State 72

   36 mul_expression_stat: mul_expression_stat MUL . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 97


State 73

   37 mul_expression_stat: mul_expression_stat DIV . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 98


State 74

   38 mul_expression_stat: mul_expression_stat MOD . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 99


State 75

    9 return_stat: initializer SEMICOLON .

    $default  reduce using rule 9 (return_stat)


State 76

   15 declaration: type ID ASGN . initializer SEMICOLON
   17            | type ID ASGN . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    expression_stat      go to state 100
    mul_expression_stat  go to state 46
    factor               go to state 47
    initializer          go to state 101


State 77

   19 declaration: type ID LB . $@1 func

    $default  reduce using rule 18 ($@1)

    $@1  go to state 102


State 78

   16 declaration: type ID SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 79

   69 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 80

   68 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 81

   61 relational: MT .

    $default  reduce using rule 61 (relational)


State 82

   62 relational: LT .

    $default  reduce using rule 62 (relational)


State 83

   63 relational: MTE .

    $default  reduce using rule 63 (relational)


State 84

   64 relational: LTE .

    $default  reduce using rule 64 (relational)


State 85

   65 relational: EQ .

    $default  reduce using rule 65 (relational)


State 86

   66 relational: NE .

    $default  reduce using rule 66 (relational)


State 87

   58 iter_expression: ID relational . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 105


State 88

   49 iteration_stat: IF LB iter_expression RB . LCB $@3 mul_stat RCB $@4 haselse

    LCB  shift, and go to state 106


State 89

   46 iteration_stat: WHILE LB iter_expression RB . LCB $@2 mul_stat RCB

    LCB  shift, and go to state 107


State 90

   31 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 31 (expression)


State 91

   30 expression: ID LB func_call RB . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 92

   22 func_call: func_call COMMA . const

    ID       shift, and go to state 59
    I_CONST  shift, and go to state 60
    F_CONST  shift, and go to state 61
    S_CONST  shift, and go to state 62

    const  go to state 109


State 93

   28 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 28 (expression)


State 94

   43 factor: LB expression_stat RB .

    $default  reduce using rule 43 (factor)


State 95

   33 expression_stat: expression_stat ADD mul_expression_stat .
   36 mul_expression_stat: mul_expression_stat . MUL factor
   37                    | mul_expression_stat . DIV factor
   38                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    $default  reduce using rule 33 (expression_stat)


State 96

   34 expression_stat: expression_stat SUB mul_expression_stat .
   36 mul_expression_stat: mul_expression_stat . MUL factor
   37                    | mul_expression_stat . DIV factor
   38                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    $default  reduce using rule 34 (expression_stat)


State 97

   36 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 36 (mul_expression_stat)


State 98

   37 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 99

   38 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 38 (mul_expression_stat)


State 100

   17 declaration: type ID ASGN expression_stat . SEMICOLON
   33 expression_stat: expression_stat . ADD mul_expression_stat
   34                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 69
    SUB        shift, and go to state 70
    SEMICOLON  shift, and go to state 110


State 101

   15 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 102

   19 declaration: type ID LB $@1 . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 112

    func            go to state 113
    func_parameter  go to state 114
    type            go to state 115


State 103

   69 print_type: ID RB SEMICOLON .

    $default  reduce using rule 69 (print_type)


State 104

   68 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 68 (print_type)


State 105

   58 iter_expression: ID relational factor .

    $default  reduce using rule 58 (iter_expression)


State 106

   49 iteration_stat: IF LB iter_expression RB LCB . $@3 mul_stat RCB $@4 haselse

    $default  reduce using rule 47 ($@3)

    $@3  go to state 116


State 107

   46 iteration_stat: WHILE LB iter_expression RB LCB . $@2 mul_stat RCB

    $default  reduce using rule 45 ($@2)

    $@2  go to state 117


State 108

   30 expression: ID LB func_call RB SEMICOLON .

    $default  reduce using rule 30 (expression)


State 109

   22 func_call: func_call COMMA const .

    $default  reduce using rule 22 (func_call)


State 110

   17 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 111

   15 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 112

   12 func: RB . LCB mul_stat RCB

    LCB  shift, and go to state 118


State 113

   19 declaration: type ID LB $@1 func .

    $default  reduce using rule 19 (declaration)


State 114

   11 func: func_parameter . RB func_end
   20 func_parameter: func_parameter . COMMA type ID

    RB     shift, and go to state 119
    COMMA  shift, and go to state 120


State 115

   21 func_parameter: type . ID

    ID  shift, and go to state 121


State 116

   49 iteration_stat: IF LB iter_expression RB LCB $@3 . mul_stat RCB $@4 haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 123
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 117

   46 iteration_stat: WHILE LB iter_expression RB LCB $@2 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 124
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 118

   12 func: RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 125
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 119

   11 func: func_parameter RB . func_end

    LCB        shift, and go to state 126
    SEMICOLON  shift, and go to state 127

    func_end  go to state 128


State 120

   20 func_parameter: func_parameter COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 129


State 121

   21 func_parameter: type ID .

    $default  reduce using rule 21 (func_parameter)


State 122

   59 mul_stat: stat . mul_stat
   60         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 60 (mul_stat)

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 130
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 123

   49 iteration_stat: IF LB iter_expression RB LCB $@3 mul_stat . RCB $@4 haselse

    RCB  shift, and go to state 131


State 124

   46 iteration_stat: WHILE LB iter_expression RB LCB $@2 mul_stat . RCB

    RCB  shift, and go to state 132


State 125

   12 func: RB LCB mul_stat . RCB

    RCB  shift, and go to state 133


State 126

   14 func_end: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 134
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 127

   13 func_end: SEMICOLON .

    $default  reduce using rule 13 (func_end)


State 128

   11 func: func_parameter RB func_end .

    $default  reduce using rule 11 (func)


State 129

   20 func_parameter: func_parameter COMMA type . ID

    ID  shift, and go to state 135


State 130

   59 mul_stat: stat mul_stat .

    $default  reduce using rule 59 (mul_stat)


State 131

   49 iteration_stat: IF LB iter_expression RB LCB $@3 mul_stat RCB . $@4 haselse

    $default  reduce using rule 48 ($@4)

    $@4  go to state 136


State 132

   46 iteration_stat: WHILE LB iter_expression RB LCB $@2 mul_stat RCB .

    $default  reduce using rule 46 (iteration_stat)


State 133

   12 func: RB LCB mul_stat RCB .

    $default  reduce using rule 12 (func)


State 134

   14 func_end: LCB mul_stat . RCB

    RCB  shift, and go to state 137


State 135

   20 func_parameter: func_parameter COMMA type ID .

    $default  reduce using rule 20 (func_parameter)


State 136

   49 iteration_stat: IF LB iter_expression RB LCB $@3 mul_stat RCB $@4 . haselse

    ELSE  shift, and go to state 138

    $default  reduce using rule 52 (haselse)

    haselse  go to state 139


State 137

   14 func_end: LCB mul_stat RCB .

    $default  reduce using rule 14 (func_end)


State 138

   51 haselse: ELSE . haselseif LCB $@5 mul_stat RCB

    IF  shift, and go to state 140

    $default  reduce using rule 54 (haselseif)

    haselseif  go to state 141


State 139

   49 iteration_stat: IF LB iter_expression RB LCB $@3 mul_stat RCB $@4 haselse .

    $default  reduce using rule 49 (iteration_stat)


State 140

   53 haselseif: IF . LB iter_expression RB LCB mul_stat RCB moreelseif

    LB  shift, and go to state 142


State 141

   51 haselse: ELSE haselseif . LCB $@5 mul_stat RCB

    LCB  shift, and go to state 143


State 142

   53 haselseif: IF LB . iter_expression RB LCB mul_stat RCB moreelseif

    ID       shift, and go to state 54
    I_CONST  shift, and go to state 55

    iter_expression  go to state 144


State 143

   51 haselse: ELSE haselseif LCB . $@5 mul_stat RCB

    $default  reduce using rule 50 ($@5)

    $@5  go to state 145


State 144

   53 haselseif: IF LB iter_expression . RB LCB mul_stat RCB moreelseif

    RB  shift, and go to state 146


State 145

   51 haselse: ELSE haselseif LCB $@5 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 147
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 146

   53 haselseif: IF LB iter_expression RB . LCB mul_stat RCB moreelseif

    LCB  shift, and go to state 148


State 147

   51 haselse: ELSE haselseif LCB $@5 mul_stat . RCB

    RCB  shift, and go to state 149


State 148

   53 haselseif: IF LB iter_expression RB LCB . mul_stat RCB moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 150
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 149

   51 haselse: ELSE haselseif LCB $@5 mul_stat RCB .

    $default  reduce using rule 51 (haselse)


State 150

   53 haselseif: IF LB iter_expression RB LCB mul_stat . RCB moreelseif

    RCB  shift, and go to state 151


State 151

   53 haselseif: IF LB iter_expression RB LCB mul_stat RCB . moreelseif

    ELSE  shift, and go to state 152

    $default  reduce using rule 56 (moreelseif)

    moreelseif  go to state 153


State 152

   55 moreelseif: ELSE . haselseif

    IF  shift, and go to state 140

    $default  reduce using rule 54 (haselseif)

    haselseif  go to state 154


State 153

   53 haselseif: IF LB iter_expression RB LCB mul_stat RCB moreelseif .

    $default  reduce using rule 53 (haselseif)


State 154

   55 moreelseif: ELSE haselseif .

    $default  reduce using rule 55 (moreelseif)
