Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: type ID declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | RET return_stat

    9 return_stat: initializer
   10            | expression_stat

   11 func: func_declaration RB func_end
   12     | RB LCB mul_stat RCB

   13 func_end: SEMICOLON
   14         | LCB mul_stat RCB

   15 declaration: ASGN initializer SEMICOLON
   16            | SEMICOLON
   17            | ASGN expression_stat SEMICOLON
   18            | LB func

   19 func_declaration: func_declaration COMMA type ID
   20                 | type ID

   21 func_call: func_call COMMA const
   22          | const

   23 const: I_CONST
   24      | F_CONST
   25      | S_CONST
   26      | ID

   27 expression: ID asgn expression_stat SEMICOLON
   28           | ID arithmetic_postfix SEMICOLON
   29           | ID LB func_call RB SEMICOLON
   30           | ID LB RB SEMICOLON
   31           | SEMICOLON

   32 expression_stat: expression_stat ADD mul_expression_stat
   33                | expression_stat SUB mul_expression_stat
   34                | mul_expression_stat

   35 mul_expression_stat: mul_expression_stat MUL factor
   36                    | mul_expression_stat DIV factor
   37                    | mul_expression_stat MOD factor
   38                    | factor

   39 factor: I_CONST
   40       | F_CONST
   41       | ID
   42       | LB expression_stat RB
   43       | ID arithmetic_postfix

   44 iteration_stat: WHILE LB iter_expression RB LCB mul_stat RCB
   45               | IF LB iter_expression RB LCB mul_stat RCB haselse

   46 haselse: ELSE haselseif LCB mul_stat RCB
   47        | %empty

   48 haselseif: IF LB iter_expression RB LCB mul_stat RCB moreelseif
   49          | %empty

   50 moreelseif: ELSE haselseif
   51           | %empty

   52 iter_expression: I_CONST
   53                | ID relational factor

   54 mul_stat: stat mul_stat
   55         | stat

   56 relational: MT
   57           | LT
   58           | MTE
   59           | LTE
   60           | EQ
   61           | NE

   62 print_func: PRINT LB print_type

   63 print_type: S_CONST RB SEMICOLON
   64           | ID RB SEMICOLON

   65 comment_stat: CPLUS_COMMENT
   66             | START_COMMENT END_COMMENT

   67 initializer: S_CONST
   68            | TRUE
   69            | FALSE

   70 asgn: ASGN
   71     | ADDASGN
   72     | SUBASGN
   73     | MULASGN
   74     | DIVASGN
   75     | MODASGN

   76 arithmetic_postfix: INC
   77                   | DEC

   78 type: INT
   79     | FLOAT
   80     | BOOL
   81     | STRING
   82     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 78
FLOAT (259) 79
STRING (260) 81
BOOL (261) 80
VOID (262) 82
ADD (263) 32
SUB (264) 33
MUL (265) 35
DIV (266) 36
MOD (267) 37
INC (268) 76
DEC (269) 77
MT (270) 56
LT (271) 57
MTE (272) 58
LTE (273) 59
EQ (274) 60
NE (275) 61
ASGN (276) 15 17 70
ADDASGN (277) 71
SUBASGN (278) 72
MULASGN (279) 73
DIVASGN (280) 74
MODASGN (281) 75
AND (282)
OR (283)
NOT (284)
LB (285) 18 29 30 42 44 45 48 62
RB (286) 11 12 29 30 42 44 45 48 63 64
LCB (287) 12 14 44 45 46 48
RCB (288) 12 14 44 45 46 48
LSB (289)
RSB (290)
COMMA (291) 19 21
PRINT (292) 62
IF (293) 45 48
ELSE (294) 46 50
FOR (295)
WHILE (296) 44
ID (297) 3 19 20 26 27 28 29 30 41 43 53 64
SEMICOLON (298) 13 15 16 17 27 28 29 30 31 63 64
RET (299) 8
START_COMMENT (300) 66
END_COMMENT (301) 66
CPLUS_COMMENT (302) 65
I_CONST (303) 23 39 52
F_CONST (304) 24 40
S_CONST (305) 25 63 67
TRUE (306) 68
FALSE (307) 69


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8, on right: 1 54 55
return_stat (56)
    on left: 9 10, on right: 8
func (57)
    on left: 11 12, on right: 18
func_end (58)
    on left: 13 14, on right: 11
declaration (59)
    on left: 15 16 17 18, on right: 3
func_declaration (60)
    on left: 19 20, on right: 11 19
func_call (61)
    on left: 21 22, on right: 21 29
const (62)
    on left: 23 24 25 26, on right: 21 22
expression (63)
    on left: 27 28 29 30 31, on right: 4
expression_stat (64)
    on left: 32 33 34, on right: 10 17 27 32 33 42
mul_expression_stat (65)
    on left: 35 36 37 38, on right: 32 33 34 35 36 37
factor (66)
    on left: 39 40 41 42 43, on right: 35 36 37 38 53
iteration_stat (67)
    on left: 44 45, on right: 5
haselse (68)
    on left: 46 47, on right: 45
haselseif (69)
    on left: 48 49, on right: 46 50
moreelseif (70)
    on left: 50 51, on right: 48
iter_expression (71)
    on left: 52 53, on right: 44 45 48
mul_stat (72)
    on left: 54 55, on right: 12 14 44 45 46 48 54
relational (73)
    on left: 56 57 58 59 60 61, on right: 53
print_func (74)
    on left: 62, on right: 6
print_type (75)
    on left: 63 64, on right: 62
comment_stat (76)
    on left: 65 66, on right: 7
initializer (77)
    on left: 67 68 69, on right: 9 15
asgn (78)
    on left: 70 71 72 73 74 75, on right: 27
arithmetic_postfix (79)
    on left: 76 77, on right: 28 43
type (80)
    on left: 78 79 80 81 82, on right: 3 19 20


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    expression      go to state 17
    iteration_stat  go to state 18
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 2

    0 $accept: program $end .

    $default  accept


State 3

   78 type: INT .

    $default  reduce using rule 78 (type)


State 4

   79 type: FLOAT .

    $default  reduce using rule 79 (type)


State 5

   81 type: STRING .

    $default  reduce using rule 81 (type)


State 6

   80 type: BOOL .

    $default  reduce using rule 80 (type)


State 7

   82 type: VOID .

    $default  reduce using rule 82 (type)


State 8

   62 print_func: PRINT . LB print_type

    LB  shift, and go to state 22


State 9

   45 iteration_stat: IF . LB iter_expression RB LCB mul_stat RCB haselse

    LB  shift, and go to state 23


State 10

   44 iteration_stat: WHILE . LB iter_expression RB LCB mul_stat RCB

    LB  shift, and go to state 24


State 11

   27 expression: ID . asgn expression_stat SEMICOLON
   28           | ID . arithmetic_postfix SEMICOLON
   29           | ID . LB func_call RB SEMICOLON
   30           | ID . LB RB SEMICOLON

    INC      shift, and go to state 25
    DEC      shift, and go to state 26
    ASGN     shift, and go to state 27
    ADDASGN  shift, and go to state 28
    SUBASGN  shift, and go to state 29
    MULASGN  shift, and go to state 30
    DIVASGN  shift, and go to state 31
    MODASGN  shift, and go to state 32
    LB       shift, and go to state 33

    asgn                go to state 34
    arithmetic_postfix  go to state 35


State 12

   31 expression: SEMICOLON .

    $default  reduce using rule 31 (expression)


State 13

    8 stat: RET . return_stat

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39
    S_CONST  shift, and go to state 40
    TRUE     shift, and go to state 41
    FALSE    shift, and go to state 42

    return_stat          go to state 43
    expression_stat      go to state 44
    mul_expression_stat  go to state 45
    factor               go to state 46
    initializer          go to state 47


State 14

   66 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 48


State 15

   65 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 65 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 18

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 19

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 20

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 21

    3 stat: type . ID declaration

    ID  shift, and go to state 49


State 22

   62 print_func: PRINT LB . print_type

    ID       shift, and go to state 50
    S_CONST  shift, and go to state 51

    print_type  go to state 52


State 23

   45 iteration_stat: IF LB . iter_expression RB LCB mul_stat RCB haselse

    ID       shift, and go to state 53
    I_CONST  shift, and go to state 54

    iter_expression  go to state 55


State 24

   44 iteration_stat: WHILE LB . iter_expression RB LCB mul_stat RCB

    ID       shift, and go to state 53
    I_CONST  shift, and go to state 54

    iter_expression  go to state 56


State 25

   76 arithmetic_postfix: INC .

    $default  reduce using rule 76 (arithmetic_postfix)


State 26

   77 arithmetic_postfix: DEC .

    $default  reduce using rule 77 (arithmetic_postfix)


State 27

   70 asgn: ASGN .

    $default  reduce using rule 70 (asgn)


State 28

   71 asgn: ADDASGN .

    $default  reduce using rule 71 (asgn)


State 29

   72 asgn: SUBASGN .

    $default  reduce using rule 72 (asgn)


State 30

   73 asgn: MULASGN .

    $default  reduce using rule 73 (asgn)


State 31

   74 asgn: DIVASGN .

    $default  reduce using rule 74 (asgn)


State 32

   75 asgn: MODASGN .

    $default  reduce using rule 75 (asgn)


State 33

   29 expression: ID LB . func_call RB SEMICOLON
   30           | ID LB . RB SEMICOLON

    RB       shift, and go to state 57
    ID       shift, and go to state 58
    I_CONST  shift, and go to state 59
    F_CONST  shift, and go to state 60
    S_CONST  shift, and go to state 61

    func_call  go to state 62
    const      go to state 63


State 34

   27 expression: ID asgn . expression_stat SEMICOLON

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    expression_stat      go to state 64
    mul_expression_stat  go to state 45
    factor               go to state 46


State 35

   28 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 36

   42 factor: LB . expression_stat RB

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    expression_stat      go to state 66
    mul_expression_stat  go to state 45
    factor               go to state 46


State 37

   41 factor: ID .
   43       | ID . arithmetic_postfix

    INC  shift, and go to state 25
    DEC  shift, and go to state 26

    $default  reduce using rule 41 (factor)

    arithmetic_postfix  go to state 67


State 38

   39 factor: I_CONST .

    $default  reduce using rule 39 (factor)


State 39

   40 factor: F_CONST .

    $default  reduce using rule 40 (factor)


State 40

   67 initializer: S_CONST .

    $default  reduce using rule 67 (initializer)


State 41

   68 initializer: TRUE .

    $default  reduce using rule 68 (initializer)


State 42

   69 initializer: FALSE .

    $default  reduce using rule 69 (initializer)


State 43

    8 stat: RET return_stat .

    $default  reduce using rule 8 (stat)


State 44

   10 return_stat: expression_stat .
   32 expression_stat: expression_stat . ADD mul_expression_stat
   33                | expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 10 (return_stat)


State 45

   34 expression_stat: mul_expression_stat .
   35 mul_expression_stat: mul_expression_stat . MUL factor
   36                    | mul_expression_stat . DIV factor
   37                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 34 (expression_stat)


State 46

   38 mul_expression_stat: factor .

    $default  reduce using rule 38 (mul_expression_stat)


State 47

    9 return_stat: initializer .

    $default  reduce using rule 9 (return_stat)


State 48

   66 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 66 (comment_stat)


State 49

    3 stat: type ID . declaration

    ASGN       shift, and go to state 73
    LB         shift, and go to state 74
    SEMICOLON  shift, and go to state 75

    declaration  go to state 76


State 50

   64 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 77


State 51

   63 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 78


State 52

   62 print_func: PRINT LB print_type .

    $default  reduce using rule 62 (print_func)


State 53

   53 iter_expression: ID . relational factor

    MT   shift, and go to state 79
    LT   shift, and go to state 80
    MTE  shift, and go to state 81
    LTE  shift, and go to state 82
    EQ   shift, and go to state 83
    NE   shift, and go to state 84

    relational  go to state 85


State 54

   52 iter_expression: I_CONST .

    $default  reduce using rule 52 (iter_expression)


State 55

   45 iteration_stat: IF LB iter_expression . RB LCB mul_stat RCB haselse

    RB  shift, and go to state 86


State 56

   44 iteration_stat: WHILE LB iter_expression . RB LCB mul_stat RCB

    RB  shift, and go to state 87


State 57

   30 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 58

   26 const: ID .

    $default  reduce using rule 26 (const)


State 59

   23 const: I_CONST .

    $default  reduce using rule 23 (const)


State 60

   24 const: F_CONST .

    $default  reduce using rule 24 (const)


State 61

   25 const: S_CONST .

    $default  reduce using rule 25 (const)


State 62

   21 func_call: func_call . COMMA const
   29 expression: ID LB func_call . RB SEMICOLON

    RB     shift, and go to state 89
    COMMA  shift, and go to state 90


State 63

   22 func_call: const .

    $default  reduce using rule 22 (func_call)


State 64

   27 expression: ID asgn expression_stat . SEMICOLON
   32 expression_stat: expression_stat . ADD mul_expression_stat
   33                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    SEMICOLON  shift, and go to state 91


State 65

   28 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 28 (expression)


State 66

   32 expression_stat: expression_stat . ADD mul_expression_stat
   33                | expression_stat . SUB mul_expression_stat
   42 factor: LB expression_stat . RB

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    RB   shift, and go to state 92


State 67

   43 factor: ID arithmetic_postfix .

    $default  reduce using rule 43 (factor)


State 68

   32 expression_stat: expression_stat ADD . mul_expression_stat

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    mul_expression_stat  go to state 93
    factor               go to state 46


State 69

   33 expression_stat: expression_stat SUB . mul_expression_stat

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    mul_expression_stat  go to state 94
    factor               go to state 46


State 70

   35 mul_expression_stat: mul_expression_stat MUL . factor

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    factor  go to state 95


State 71

   36 mul_expression_stat: mul_expression_stat DIV . factor

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    factor  go to state 96


State 72

   37 mul_expression_stat: mul_expression_stat MOD . factor

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    factor  go to state 97


State 73

   15 declaration: ASGN . initializer SEMICOLON
   17            | ASGN . expression_stat SEMICOLON

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39
    S_CONST  shift, and go to state 40
    TRUE     shift, and go to state 41
    FALSE    shift, and go to state 42

    expression_stat      go to state 98
    mul_expression_stat  go to state 45
    factor               go to state 46
    initializer          go to state 99


State 74

   18 declaration: LB . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 100

    func              go to state 101
    func_declaration  go to state 102
    type              go to state 103


State 75

   16 declaration: SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 76

    3 stat: type ID declaration .

    $default  reduce using rule 3 (stat)


State 77

   64 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 78

   63 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 79

   56 relational: MT .

    $default  reduce using rule 56 (relational)


State 80

   57 relational: LT .

    $default  reduce using rule 57 (relational)


State 81

   58 relational: MTE .

    $default  reduce using rule 58 (relational)


State 82

   59 relational: LTE .

    $default  reduce using rule 59 (relational)


State 83

   60 relational: EQ .

    $default  reduce using rule 60 (relational)


State 84

   61 relational: NE .

    $default  reduce using rule 61 (relational)


State 85

   53 iter_expression: ID relational . factor

    LB       shift, and go to state 36
    ID       shift, and go to state 37
    I_CONST  shift, and go to state 38
    F_CONST  shift, and go to state 39

    factor  go to state 106


State 86

   45 iteration_stat: IF LB iter_expression RB . LCB mul_stat RCB haselse

    LCB  shift, and go to state 107


State 87

   44 iteration_stat: WHILE LB iter_expression RB . LCB mul_stat RCB

    LCB  shift, and go to state 108


State 88

   30 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 30 (expression)


State 89

   29 expression: ID LB func_call RB . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 90

   21 func_call: func_call COMMA . const

    ID       shift, and go to state 58
    I_CONST  shift, and go to state 59
    F_CONST  shift, and go to state 60
    S_CONST  shift, and go to state 61

    const  go to state 110


State 91

   27 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 27 (expression)


State 92

   42 factor: LB expression_stat RB .

    $default  reduce using rule 42 (factor)


State 93

   32 expression_stat: expression_stat ADD mul_expression_stat .
   35 mul_expression_stat: mul_expression_stat . MUL factor
   36                    | mul_expression_stat . DIV factor
   37                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 32 (expression_stat)


State 94

   33 expression_stat: expression_stat SUB mul_expression_stat .
   35 mul_expression_stat: mul_expression_stat . MUL factor
   36                    | mul_expression_stat . DIV factor
   37                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 33 (expression_stat)


State 95

   35 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 35 (mul_expression_stat)


State 96

   36 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 36 (mul_expression_stat)


State 97

   37 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 98

   17 declaration: ASGN expression_stat . SEMICOLON
   32 expression_stat: expression_stat . ADD mul_expression_stat
   33                | expression_stat . SUB mul_expression_stat

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    SEMICOLON  shift, and go to state 111


State 99

   15 declaration: ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 100

   12 func: RB . LCB mul_stat RCB

    LCB  shift, and go to state 113


State 101

   18 declaration: LB func .

    $default  reduce using rule 18 (declaration)


State 102

   11 func: func_declaration . RB func_end
   19 func_declaration: func_declaration . COMMA type ID

    RB     shift, and go to state 114
    COMMA  shift, and go to state 115


State 103

   20 func_declaration: type . ID

    ID  shift, and go to state 116


State 104

   64 print_type: ID RB SEMICOLON .

    $default  reduce using rule 64 (print_type)


State 105

   63 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 63 (print_type)


State 106

   53 iter_expression: ID relational factor .

    $default  reduce using rule 53 (iter_expression)


State 107

   45 iteration_stat: IF LB iter_expression RB LCB . mul_stat RCB haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 118
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 108

   44 iteration_stat: WHILE LB iter_expression RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 119
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 109

   29 expression: ID LB func_call RB SEMICOLON .

    $default  reduce using rule 29 (expression)


State 110

   21 func_call: func_call COMMA const .

    $default  reduce using rule 21 (func_call)


State 111

   17 declaration: ASGN expression_stat SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 112

   15 declaration: ASGN initializer SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 113

   12 func: RB LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 120
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 114

   11 func: func_declaration RB . func_end

    LCB        shift, and go to state 121
    SEMICOLON  shift, and go to state 122

    func_end  go to state 123


State 115

   19 func_declaration: func_declaration COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 124


State 116

   20 func_declaration: type ID .

    $default  reduce using rule 20 (func_declaration)


State 117

   54 mul_stat: stat . mul_stat
   55         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 55 (mul_stat)

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 125
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 118

   45 iteration_stat: IF LB iter_expression RB LCB mul_stat . RCB haselse

    RCB  shift, and go to state 126


State 119

   44 iteration_stat: WHILE LB iter_expression RB LCB mul_stat . RCB

    RCB  shift, and go to state 127


State 120

   12 func: RB LCB mul_stat . RCB

    RCB  shift, and go to state 128


State 121

   14 func_end: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 129
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 122

   13 func_end: SEMICOLON .

    $default  reduce using rule 13 (func_end)


State 123

   11 func: func_declaration RB func_end .

    $default  reduce using rule 11 (func)


State 124

   19 func_declaration: func_declaration COMMA type . ID

    ID  shift, and go to state 130


State 125

   54 mul_stat: stat mul_stat .

    $default  reduce using rule 54 (mul_stat)


State 126

   45 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB . haselse

    ELSE  shift, and go to state 131

    $default  reduce using rule 47 (haselse)

    haselse  go to state 132


State 127

   44 iteration_stat: WHILE LB iter_expression RB LCB mul_stat RCB .

    $default  reduce using rule 44 (iteration_stat)


State 128

   12 func: RB LCB mul_stat RCB .

    $default  reduce using rule 12 (func)


State 129

   14 func_end: LCB mul_stat . RCB

    RCB  shift, and go to state 133


State 130

   19 func_declaration: func_declaration COMMA type ID .

    $default  reduce using rule 19 (func_declaration)


State 131

   46 haselse: ELSE . haselseif LCB mul_stat RCB

    IF  shift, and go to state 134

    $default  reduce using rule 49 (haselseif)

    haselseif  go to state 135


State 132

   45 iteration_stat: IF LB iter_expression RB LCB mul_stat RCB haselse .

    $default  reduce using rule 45 (iteration_stat)


State 133

   14 func_end: LCB mul_stat RCB .

    $default  reduce using rule 14 (func_end)


State 134

   48 haselseif: IF . LB iter_expression RB LCB mul_stat RCB moreelseif

    LB  shift, and go to state 136


State 135

   46 haselse: ELSE haselseif . LCB mul_stat RCB

    LCB  shift, and go to state 137


State 136

   48 haselseif: IF LB . iter_expression RB LCB mul_stat RCB moreelseif

    ID       shift, and go to state 53
    I_CONST  shift, and go to state 54

    iter_expression  go to state 138


State 137

   46 haselse: ELSE haselseif LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 139
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 138

   48 haselseif: IF LB iter_expression . RB LCB mul_stat RCB moreelseif

    RB  shift, and go to state 140


State 139

   46 haselse: ELSE haselseif LCB mul_stat . RCB

    RCB  shift, and go to state 141


State 140

   48 haselseif: IF LB iter_expression RB . LCB mul_stat RCB moreelseif

    LCB  shift, and go to state 142


State 141

   46 haselse: ELSE haselseif LCB mul_stat RCB .

    $default  reduce using rule 46 (haselse)


State 142

   48 haselseif: IF LB iter_expression RB LCB . mul_stat RCB moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 117
    expression      go to state 17
    iteration_stat  go to state 18
    mul_stat        go to state 143
    print_func      go to state 19
    comment_stat    go to state 20
    type            go to state 21


State 143

   48 haselseif: IF LB iter_expression RB LCB mul_stat . RCB moreelseif

    RCB  shift, and go to state 144


State 144

   48 haselseif: IF LB iter_expression RB LCB mul_stat RCB . moreelseif

    ELSE  shift, and go to state 145

    $default  reduce using rule 51 (moreelseif)

    moreelseif  go to state 146


State 145

   50 moreelseif: ELSE . haselseif

    IF  shift, and go to state 134

    $default  reduce using rule 49 (haselseif)

    haselseif  go to state 147


State 146

   48 haselseif: IF LB iter_expression RB LCB mul_stat RCB moreelseif .

    $default  reduce using rule 48 (haselseif)


State 147

   50 moreelseif: ELSE haselseif .

    $default  reduce using rule 50 (moreelseif)
