Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | RET return_stat

    9 return_stat: initializer SEMICOLON
   10            | expression_stat SEMICOLON

   11 func: func_parameter RB func_end
   12     | RB func_end

   13 func_end: SEMICOLON
   14         | LCB mul_stat RCB

   15 declaration: type ID ASGN initializer SEMICOLON
   16            | type ID SEMICOLON
   17            | type ID ASGN expression_stat SEMICOLON

   18 $@1: %empty

   19 declaration: type ID LB $@1 func

   20 func_parameter: func_parameter COMMA type ID
   21               | type ID

   22 func_call: func_call COMMA const
   23          | const

   24 const: S_CONST
   25      | expression_stat

   26 expression: ID asgn expression_stat SEMICOLON
   27           | ID arithmetic_postfix SEMICOLON

   28 $@2: %empty

   29 expression: ID LB func_call RB $@2 SEMICOLON
   30           | ID LB RB SEMICOLON
   31           | SEMICOLON

   32 expression_stat: expression_stat relational add_expression_stat
   33                | add_expression_stat

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat
   35                    | add_expression_stat SUB mul_expression_stat
   36                    | mul_expression_stat

   37 mul_expression_stat: mul_expression_stat MUL factor
   38                    | mul_expression_stat DIV factor
   39                    | mul_expression_stat MOD factor
   40                    | factor

   41 factor: I_CONST
   42       | F_CONST
   43       | ID
   44       | LB expression_stat RB
   45       | ID arithmetic_postfix
   46       | ID LB func_call RB

   47 $@3: %empty

   48 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB

   49 $@4: %empty

   50 $@5: %empty

   51 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

   52 haselse: ELSE haselseif
   53        | %empty

   54 $@6: %empty

   55 $@7: %empty

   56 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

   57 $@8: %empty

   58 haselseif: LCB $@8 mul_stat RCB

   59 moreelseif: ELSE haselseif
   60           | %empty

   61 mul_stat: stat mul_stat
   62         | stat

   63 relational: MT
   64           | LT
   65           | MTE
   66           | LTE
   67           | EQ
   68           | NE

   69 print_func: PRINT LB print_type

   70 print_type: S_CONST RB SEMICOLON
   71           | ID RB SEMICOLON

   72 comment_stat: CPLUS_COMMENT
   73             | START_COMMENT END_COMMENT

   74 initializer: S_CONST
   75            | TRUE
   76            | FALSE

   77 asgn: ASGN
   78     | ADDASGN
   79     | SUBASGN
   80     | MULASGN
   81     | DIVASGN
   82     | MODASGN

   83 arithmetic_postfix: INC
   84                   | DEC

   85 type: INT
   86     | FLOAT
   87     | BOOL
   88     | STRING
   89     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 85
FLOAT (259) 86
STRING (260) 88
BOOL (261) 87
VOID (262) 89
ADD (263) 34
SUB (264) 35
MUL (265) 37
DIV (266) 38
MOD (267) 39
INC (268) 83
DEC (269) 84
MT (270) 63
LT (271) 64
MTE (272) 65
LTE (273) 66
EQ (274) 67
NE (275) 68
ASGN (276) 15 17 77
ADDASGN (277) 78
SUBASGN (278) 79
MULASGN (279) 80
DIVASGN (280) 81
MODASGN (281) 82
AND (282)
OR (283)
NOT (284)
LB (285) 19 29 30 44 46 48 51 56 69
RB (286) 11 12 29 30 44 46 48 51 56 70 71
LCB (287) 14 48 51 56 58
RCB (288) 14 48 51 56 58
LSB (289)
RSB (290)
COMMA (291) 20 22
PRINT (292) 69
IF (293) 51 56
ELSE (294) 52 59
FOR (295)
WHILE (296) 48
ID (297) 15 16 17 19 20 21 26 27 29 30 43 45 46 71
SEMICOLON (298) 9 10 13 15 16 17 26 27 29 30 31 70 71
RET (299) 8
START_COMMENT (300) 73
END_COMMENT (301) 73
CPLUS_COMMENT (302) 72
I_CONST (303) 41
F_CONST (304) 42
S_CONST (305) 24 70 74
TRUE (306) 75
FALSE (307) 76


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8, on right: 1 61 62
return_stat (56)
    on left: 9 10, on right: 8
func (57)
    on left: 11 12, on right: 19
func_end (58)
    on left: 13 14, on right: 11 12
declaration (59)
    on left: 15 16 17 19, on right: 3
$@1 (60)
    on left: 18, on right: 19
func_parameter (61)
    on left: 20 21, on right: 11 20
func_call (62)
    on left: 22 23, on right: 22 29 46
const (63)
    on left: 24 25, on right: 22 23
expression (64)
    on left: 26 27 29 30 31, on right: 4
$@2 (65)
    on left: 28, on right: 29
expression_stat (66)
    on left: 32 33, on right: 10 17 25 26 32 44 48 51 56
add_expression_stat (67)
    on left: 34 35 36, on right: 32 33 34 35
mul_expression_stat (68)
    on left: 37 38 39 40, on right: 34 35 36 37 38 39
factor (69)
    on left: 41 42 43 44 45 46, on right: 37 38 39 40
iteration_stat (70)
    on left: 48 51, on right: 5
$@3 (71)
    on left: 47, on right: 48
$@4 (72)
    on left: 49, on right: 51
$@5 (73)
    on left: 50, on right: 51
haselse (74)
    on left: 52 53, on right: 51
haselseif (75)
    on left: 56 58, on right: 52 59
$@6 (76)
    on left: 54, on right: 56
$@7 (77)
    on left: 55, on right: 56
$@8 (78)
    on left: 57, on right: 58
moreelseif (79)
    on left: 59 60, on right: 56
mul_stat (80)
    on left: 61 62, on right: 14 48 51 56 58 61
relational (81)
    on left: 63 64 65 66 67 68, on right: 32
print_func (82)
    on left: 69, on right: 6
print_type (83)
    on left: 70 71, on right: 69
comment_stat (84)
    on left: 72 73, on right: 7
initializer (85)
    on left: 74 75 76, on right: 9 15
asgn (86)
    on left: 77 78 79 80 81 82, on right: 26
arithmetic_postfix (87)
    on left: 83 84, on right: 27 45
type (88)
    on left: 85 86 87 88 89, on right: 15 16 17 19 20 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 2

    0 $accept: program $end .

    $default  accept


State 3

   85 type: INT .

    $default  reduce using rule 85 (type)


State 4

   86 type: FLOAT .

    $default  reduce using rule 86 (type)


State 5

   88 type: STRING .

    $default  reduce using rule 88 (type)


State 6

   87 type: BOOL .

    $default  reduce using rule 87 (type)


State 7

   89 type: VOID .

    $default  reduce using rule 89 (type)


State 8

   69 print_func: PRINT . LB print_type

    LB  shift, and go to state 23


State 9

   51 iteration_stat: IF . LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB  shift, and go to state 24


State 10

   48 iteration_stat: WHILE . LB expression_stat RB LCB $@3 mul_stat RCB

    LB  shift, and go to state 25


State 11

   26 expression: ID . asgn expression_stat SEMICOLON
   27           | ID . arithmetic_postfix SEMICOLON
   29           | ID . LB func_call RB $@2 SEMICOLON
   30           | ID . LB RB SEMICOLON

    INC      shift, and go to state 26
    DEC      shift, and go to state 27
    ASGN     shift, and go to state 28
    ADDASGN  shift, and go to state 29
    SUBASGN  shift, and go to state 30
    MULASGN  shift, and go to state 31
    DIVASGN  shift, and go to state 32
    MODASGN  shift, and go to state 33
    LB       shift, and go to state 34

    asgn                go to state 35
    arithmetic_postfix  go to state 36


State 12

   31 expression: SEMICOLON .

    $default  reduce using rule 31 (expression)


State 13

    8 stat: RET . return_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    return_stat          go to state 44
    expression_stat      go to state 45
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 49


State 14

   73 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 50


State 15

   72 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 72 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 18

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 19

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 20

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 21

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 22

   15 declaration: type . ID ASGN initializer SEMICOLON
   16            | type . ID SEMICOLON
   17            | type . ID ASGN expression_stat SEMICOLON
   19            | type . ID LB $@1 func

    ID  shift, and go to state 51


State 23

   69 print_func: PRINT LB . print_type

    ID       shift, and go to state 52
    S_CONST  shift, and go to state 53

    print_type  go to state 54


State 24

   51 iteration_stat: IF LB . expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 55
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 25

   48 iteration_stat: WHILE LB . expression_stat RB LCB $@3 mul_stat RCB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 56
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 26

   83 arithmetic_postfix: INC .

    $default  reduce using rule 83 (arithmetic_postfix)


State 27

   84 arithmetic_postfix: DEC .

    $default  reduce using rule 84 (arithmetic_postfix)


State 28

   77 asgn: ASGN .

    $default  reduce using rule 77 (asgn)


State 29

   78 asgn: ADDASGN .

    $default  reduce using rule 78 (asgn)


State 30

   79 asgn: SUBASGN .

    $default  reduce using rule 79 (asgn)


State 31

   80 asgn: MULASGN .

    $default  reduce using rule 80 (asgn)


State 32

   81 asgn: DIVASGN .

    $default  reduce using rule 81 (asgn)


State 33

   82 asgn: MODASGN .

    $default  reduce using rule 82 (asgn)


State 34

   29 expression: ID LB . func_call RB $@2 SEMICOLON
   30           | ID LB . RB SEMICOLON

    LB       shift, and go to state 37
    RB       shift, and go to state 57
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 58

    func_call            go to state 59
    const                go to state 60
    expression_stat      go to state 61
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 35

   26 expression: ID asgn . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 62
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 36

   27 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 37

   44 factor: LB . expression_stat RB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 64
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 38

   43 factor: ID .
   45       | ID . arithmetic_postfix
   46       | ID . LB func_call RB

    INC  shift, and go to state 26
    DEC  shift, and go to state 27
    LB   shift, and go to state 65

    $default  reduce using rule 43 (factor)

    arithmetic_postfix  go to state 66


State 39

   41 factor: I_CONST .

    $default  reduce using rule 41 (factor)


State 40

   42 factor: F_CONST .

    $default  reduce using rule 42 (factor)


State 41

   74 initializer: S_CONST .

    $default  reduce using rule 74 (initializer)


State 42

   75 initializer: TRUE .

    $default  reduce using rule 75 (initializer)


State 43

   76 initializer: FALSE .

    $default  reduce using rule 76 (initializer)


State 44

    8 stat: RET return_stat .

    $default  reduce using rule 8 (stat)


State 45

   10 return_stat: expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 67
    LT         shift, and go to state 68
    MTE        shift, and go to state 69
    LTE        shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 73

    relational  go to state 74


State 46

   33 expression_stat: add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 33 (expression_stat)


State 47

   36 add_expression_stat: mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 36 (add_expression_stat)


State 48

   40 mul_expression_stat: factor .

    $default  reduce using rule 40 (mul_expression_stat)


State 49

    9 return_stat: initializer . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 50

   73 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 73 (comment_stat)


State 51

   15 declaration: type ID . ASGN initializer SEMICOLON
   16            | type ID . SEMICOLON
   17            | type ID . ASGN expression_stat SEMICOLON
   19            | type ID . LB $@1 func

    ASGN       shift, and go to state 81
    LB         shift, and go to state 82
    SEMICOLON  shift, and go to state 83


State 52

   71 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 84


State 53

   70 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 85


State 54

   69 print_func: PRINT LB print_type .

    $default  reduce using rule 69 (print_func)


State 55

   32 expression_stat: expression_stat . relational add_expression_stat
   51 iteration_stat: IF LB expression_stat . RB LCB $@4 mul_stat RCB $@5 haselse

    MT   shift, and go to state 67
    LT   shift, and go to state 68
    MTE  shift, and go to state 69
    LTE  shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72
    RB   shift, and go to state 86

    relational  go to state 74


State 56

   32 expression_stat: expression_stat . relational add_expression_stat
   48 iteration_stat: WHILE LB expression_stat . RB LCB $@3 mul_stat RCB

    MT   shift, and go to state 67
    LT   shift, and go to state 68
    MTE  shift, and go to state 69
    LTE  shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72
    RB   shift, and go to state 87

    relational  go to state 74


State 57

   30 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 58

   24 const: S_CONST .

    $default  reduce using rule 24 (const)


State 59

   22 func_call: func_call . COMMA const
   29 expression: ID LB func_call . RB $@2 SEMICOLON

    RB     shift, and go to state 89
    COMMA  shift, and go to state 90


State 60

   23 func_call: const .

    $default  reduce using rule 23 (func_call)


State 61

   25 const: expression_stat .
   32 expression_stat: expression_stat . relational add_expression_stat

    MT   shift, and go to state 67
    LT   shift, and go to state 68
    MTE  shift, and go to state 69
    LTE  shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72

    $default  reduce using rule 25 (const)

    relational  go to state 74


State 62

   26 expression: ID asgn expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 67
    LT         shift, and go to state 68
    MTE        shift, and go to state 69
    LTE        shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 91

    relational  go to state 74


State 63

   27 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 27 (expression)


State 64

   32 expression_stat: expression_stat . relational add_expression_stat
   44 factor: LB expression_stat . RB

    MT   shift, and go to state 67
    LT   shift, and go to state 68
    MTE  shift, and go to state 69
    LTE  shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72
    RB   shift, and go to state 92

    relational  go to state 74


State 65

   46 factor: ID LB . func_call RB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 58

    func_call            go to state 93
    const                go to state 60
    expression_stat      go to state 61
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 66

   45 factor: ID arithmetic_postfix .

    $default  reduce using rule 45 (factor)


State 67

   63 relational: MT .

    $default  reduce using rule 63 (relational)


State 68

   64 relational: LT .

    $default  reduce using rule 64 (relational)


State 69

   65 relational: MTE .

    $default  reduce using rule 65 (relational)


State 70

   66 relational: LTE .

    $default  reduce using rule 66 (relational)


State 71

   67 relational: EQ .

    $default  reduce using rule 67 (relational)


State 72

   68 relational: NE .

    $default  reduce using rule 68 (relational)


State 73

   10 return_stat: expression_stat SEMICOLON .

    $default  reduce using rule 10 (return_stat)


State 74

   32 expression_stat: expression_stat relational . add_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    add_expression_stat  go to state 94
    mul_expression_stat  go to state 47
    factor               go to state 48


State 75

   34 add_expression_stat: add_expression_stat ADD . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 95
    factor               go to state 48


State 76

   35 add_expression_stat: add_expression_stat SUB . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 96
    factor               go to state 48


State 77

   37 mul_expression_stat: mul_expression_stat MUL . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 97


State 78

   38 mul_expression_stat: mul_expression_stat DIV . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 98


State 79

   39 mul_expression_stat: mul_expression_stat MOD . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 99


State 80

    9 return_stat: initializer SEMICOLON .

    $default  reduce using rule 9 (return_stat)


State 81

   15 declaration: type ID ASGN . initializer SEMICOLON
   17            | type ID ASGN . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    expression_stat      go to state 100
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 101


State 82

   19 declaration: type ID LB . $@1 func

    $default  reduce using rule 18 ($@1)

    $@1  go to state 102


State 83

   16 declaration: type ID SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 84

   71 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 103


State 85

   70 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 86

   51 iteration_stat: IF LB expression_stat RB . LCB $@4 mul_stat RCB $@5 haselse

    LCB  shift, and go to state 105


State 87

   48 iteration_stat: WHILE LB expression_stat RB . LCB $@3 mul_stat RCB

    LCB  shift, and go to state 106


State 88

   30 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 30 (expression)


State 89

   29 expression: ID LB func_call RB . $@2 SEMICOLON

    $default  reduce using rule 28 ($@2)

    $@2  go to state 107


State 90

   22 func_call: func_call COMMA . const

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 58

    const                go to state 108
    expression_stat      go to state 61
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 91

   26 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 26 (expression)


State 92

   44 factor: LB expression_stat RB .

    $default  reduce using rule 44 (factor)


State 93

   22 func_call: func_call . COMMA const
   46 factor: ID LB func_call . RB

    RB     shift, and go to state 109
    COMMA  shift, and go to state 90


State 94

   32 expression_stat: expression_stat relational add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 32 (expression_stat)


State 95

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 34 (add_expression_stat)


State 96

   35 add_expression_stat: add_expression_stat SUB mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 35 (add_expression_stat)


State 97

   37 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 98

   38 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 38 (mul_expression_stat)


State 99

   39 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 39 (mul_expression_stat)


State 100

   17 declaration: type ID ASGN expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 67
    LT         shift, and go to state 68
    MTE        shift, and go to state 69
    LTE        shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 110

    relational  go to state 74


State 101

   15 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 102

   19 declaration: type ID LB $@1 . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 112

    func            go to state 113
    func_parameter  go to state 114
    type            go to state 115


State 103

   71 print_type: ID RB SEMICOLON .

    $default  reduce using rule 71 (print_type)


State 104

   70 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 70 (print_type)


State 105

   51 iteration_stat: IF LB expression_stat RB LCB . $@4 mul_stat RCB $@5 haselse

    $default  reduce using rule 49 ($@4)

    $@4  go to state 116


State 106

   48 iteration_stat: WHILE LB expression_stat RB LCB . $@3 mul_stat RCB

    $default  reduce using rule 47 ($@3)

    $@3  go to state 117


State 107

   29 expression: ID LB func_call RB $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 118


State 108

   22 func_call: func_call COMMA const .

    $default  reduce using rule 22 (func_call)


State 109

   46 factor: ID LB func_call RB .

    $default  reduce using rule 46 (factor)


State 110

   17 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 111

   15 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 112

   12 func: RB . func_end

    LCB        shift, and go to state 119
    SEMICOLON  shift, and go to state 120

    func_end  go to state 121


State 113

   19 declaration: type ID LB $@1 func .

    $default  reduce using rule 19 (declaration)


State 114

   11 func: func_parameter . RB func_end
   20 func_parameter: func_parameter . COMMA type ID

    RB     shift, and go to state 122
    COMMA  shift, and go to state 123


State 115

   21 func_parameter: type . ID

    ID  shift, and go to state 124


State 116

   51 iteration_stat: IF LB expression_stat RB LCB $@4 . mul_stat RCB $@5 haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 126
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 117

   48 iteration_stat: WHILE LB expression_stat RB LCB $@3 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 127
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 118

   29 expression: ID LB func_call RB $@2 SEMICOLON .

    $default  reduce using rule 29 (expression)


State 119

   14 func_end: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 128
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 120

   13 func_end: SEMICOLON .

    $default  reduce using rule 13 (func_end)


State 121

   12 func: RB func_end .

    $default  reduce using rule 12 (func)


State 122

   11 func: func_parameter RB . func_end

    LCB        shift, and go to state 119
    SEMICOLON  shift, and go to state 120

    func_end  go to state 129


State 123

   20 func_parameter: func_parameter COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 130


State 124

   21 func_parameter: type ID .

    $default  reduce using rule 21 (func_parameter)


State 125

   61 mul_stat: stat . mul_stat
   62         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 62 (mul_stat)

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 131
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 126

   51 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat . RCB $@5 haselse

    RCB  shift, and go to state 132


State 127

   48 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat . RCB

    RCB  shift, and go to state 133


State 128

   14 func_end: LCB mul_stat . RCB

    RCB  shift, and go to state 134


State 129

   11 func: func_parameter RB func_end .

    $default  reduce using rule 11 (func)


State 130

   20 func_parameter: func_parameter COMMA type . ID

    ID  shift, and go to state 135


State 131

   61 mul_stat: stat mul_stat .

    $default  reduce using rule 61 (mul_stat)


State 132

   51 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB . $@5 haselse

    $default  reduce using rule 50 ($@5)

    $@5  go to state 136


State 133

   48 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB .

    $default  reduce using rule 48 (iteration_stat)


State 134

   14 func_end: LCB mul_stat RCB .

    $default  reduce using rule 14 (func_end)


State 135

   20 func_parameter: func_parameter COMMA type ID .

    $default  reduce using rule 20 (func_parameter)


State 136

   51 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 . haselse

    ELSE  shift, and go to state 137

    $default  reduce using rule 53 (haselse)

    haselse  go to state 138


State 137

   52 haselse: ELSE . haselseif

    LCB  shift, and go to state 139
    IF   shift, and go to state 140

    haselseif  go to state 141


State 138

   51 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse .

    $default  reduce using rule 51 (iteration_stat)


State 139

   58 haselseif: LCB . $@8 mul_stat RCB

    $default  reduce using rule 57 ($@8)

    $@8  go to state 142


State 140

   56 haselseif: IF . LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    LB  shift, and go to state 143


State 141

   52 haselse: ELSE haselseif .

    $default  reduce using rule 52 (haselse)


State 142

   58 haselseif: LCB $@8 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 144
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 143

   56 haselseif: IF LB . expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 145
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 144

   58 haselseif: LCB $@8 mul_stat . RCB

    RCB  shift, and go to state 146


State 145

   32 expression_stat: expression_stat . relational add_expression_stat
   56 haselseif: IF LB expression_stat . RB LCB $@6 mul_stat RCB $@7 moreelseif

    MT   shift, and go to state 67
    LT   shift, and go to state 68
    MTE  shift, and go to state 69
    LTE  shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72
    RB   shift, and go to state 147

    relational  go to state 74


State 146

   58 haselseif: LCB $@8 mul_stat RCB .

    $default  reduce using rule 58 (haselseif)


State 147

   56 haselseif: IF LB expression_stat RB . LCB $@6 mul_stat RCB $@7 moreelseif

    LCB  shift, and go to state 148


State 148

   56 haselseif: IF LB expression_stat RB LCB . $@6 mul_stat RCB $@7 moreelseif

    $default  reduce using rule 54 ($@6)

    $@6  go to state 149


State 149

   56 haselseif: IF LB expression_stat RB LCB $@6 . mul_stat RCB $@7 moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 125
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 150
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 150

   56 haselseif: IF LB expression_stat RB LCB $@6 mul_stat . RCB $@7 moreelseif

    RCB  shift, and go to state 151


State 151

   56 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB . $@7 moreelseif

    $default  reduce using rule 55 ($@7)

    $@7  go to state 152


State 152

   56 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 . moreelseif

    ELSE  shift, and go to state 153

    $default  reduce using rule 60 (moreelseif)

    moreelseif  go to state 154


State 153

   59 moreelseif: ELSE . haselseif

    LCB  shift, and go to state 139
    IF   shift, and go to state 140

    haselseif  go to state 155


State 154

   56 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif .

    $default  reduce using rule 56 (haselseif)


State 155

   59 moreelseif: ELSE haselseif .

    $default  reduce using rule 59 (moreelseif)
