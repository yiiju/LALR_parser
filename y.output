Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | RET return_stat

    9 return_stat: initializer SEMICOLON
   10            | expression_stat SEMICOLON

   11 func: func_parameter RB func_end
   12     | RB func_end

   13 func_end: SEMICOLON
   14         | LCB mul_stat RCB

   15 declaration: type ID ASGN initializer SEMICOLON
   16            | type ID SEMICOLON
   17            | type ID ASGN expression_stat SEMICOLON

   18 $@1: %empty

   19 declaration: type ID LB $@1 func

   20 func_parameter: func_parameter COMMA type ID
   21               | type ID

   22 func_call: func_call COMMA const
   23          | const

   24 const: S_CONST
   25      | expression_stat

   26 expression: ID asgn expression_stat SEMICOLON
   27           | ID arithmetic_postfix SEMICOLON

   28 $@2: %empty

   29 expression: ID LB func_call RB $@2 SEMICOLON
   30           | ID LB RB SEMICOLON
   31           | SEMICOLON

   32 expression_stat: expression_stat relational add_expression_stat
   33                | add_expression_stat

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat
   35                    | add_expression_stat SUB mul_expression_stat
   36                    | mul_expression_stat

   37 mul_expression_stat: mul_expression_stat MUL factor
   38                    | mul_expression_stat DIV factor
   39                    | mul_expression_stat MOD factor
   40                    | factor

   41 factor: I_CONST
   42       | F_CONST
   43       | ID
   44       | LB expression_stat RB
   45       | ID arithmetic_postfix

   46 $@3: %empty

   47 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB

   48 $@4: %empty

   49 $@5: %empty

   50 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

   51 $@6: %empty

   52 haselse: ELSE haselseif LCB $@6 mul_stat RCB
   53        | %empty

   54 haselseif: IF LB expression_stat RB LCB mul_stat RCB moreelseif
   55          | %empty

   56 moreelseif: ELSE haselseif
   57           | %empty

   58 mul_stat: stat mul_stat
   59         | stat

   60 relational: MT
   61           | LT
   62           | MTE
   63           | LTE
   64           | EQ
   65           | NE

   66 print_func: PRINT LB print_type

   67 print_type: S_CONST RB SEMICOLON
   68           | ID RB SEMICOLON

   69 comment_stat: CPLUS_COMMENT
   70             | START_COMMENT END_COMMENT

   71 initializer: S_CONST
   72            | TRUE
   73            | FALSE

   74 asgn: ASGN
   75     | ADDASGN
   76     | SUBASGN
   77     | MULASGN
   78     | DIVASGN
   79     | MODASGN

   80 arithmetic_postfix: INC
   81                   | DEC

   82 type: INT
   83     | FLOAT
   84     | BOOL
   85     | STRING
   86     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 82
FLOAT (259) 83
STRING (260) 85
BOOL (261) 84
VOID (262) 86
ADD (263) 34
SUB (264) 35
MUL (265) 37
DIV (266) 38
MOD (267) 39
INC (268) 80
DEC (269) 81
MT (270) 60
LT (271) 61
MTE (272) 62
LTE (273) 63
EQ (274) 64
NE (275) 65
ASGN (276) 15 17 74
ADDASGN (277) 75
SUBASGN (278) 76
MULASGN (279) 77
DIVASGN (280) 78
MODASGN (281) 79
AND (282)
OR (283)
NOT (284)
LB (285) 19 29 30 44 47 50 54 66
RB (286) 11 12 29 30 44 47 50 54 67 68
LCB (287) 14 47 50 52 54
RCB (288) 14 47 50 52 54
LSB (289)
RSB (290)
COMMA (291) 20 22
PRINT (292) 66
IF (293) 50 54
ELSE (294) 52 56
FOR (295)
WHILE (296) 47
ID (297) 15 16 17 19 20 21 26 27 29 30 43 45 68
SEMICOLON (298) 9 10 13 15 16 17 26 27 29 30 31 67 68
RET (299) 8
START_COMMENT (300) 70
END_COMMENT (301) 70
CPLUS_COMMENT (302) 69
I_CONST (303) 41
F_CONST (304) 42
S_CONST (305) 24 67 71
TRUE (306) 72
FALSE (307) 73


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8, on right: 1 58 59
return_stat (56)
    on left: 9 10, on right: 8
func (57)
    on left: 11 12, on right: 19
func_end (58)
    on left: 13 14, on right: 11 12
declaration (59)
    on left: 15 16 17 19, on right: 3
$@1 (60)
    on left: 18, on right: 19
func_parameter (61)
    on left: 20 21, on right: 11 20
func_call (62)
    on left: 22 23, on right: 22 29
const (63)
    on left: 24 25, on right: 22 23
expression (64)
    on left: 26 27 29 30 31, on right: 4
$@2 (65)
    on left: 28, on right: 29
expression_stat (66)
    on left: 32 33, on right: 10 17 25 26 32 44 47 50 54
add_expression_stat (67)
    on left: 34 35 36, on right: 32 33 34 35
mul_expression_stat (68)
    on left: 37 38 39 40, on right: 34 35 36 37 38 39
factor (69)
    on left: 41 42 43 44 45, on right: 37 38 39 40
iteration_stat (70)
    on left: 47 50, on right: 5
$@3 (71)
    on left: 46, on right: 47
$@4 (72)
    on left: 48, on right: 50
$@5 (73)
    on left: 49, on right: 50
haselse (74)
    on left: 52 53, on right: 50
$@6 (75)
    on left: 51, on right: 52
haselseif (76)
    on left: 54 55, on right: 52 56
moreelseif (77)
    on left: 56 57, on right: 54
mul_stat (78)
    on left: 58 59, on right: 14 47 50 52 54 58
relational (79)
    on left: 60 61 62 63 64 65, on right: 32
print_func (80)
    on left: 66, on right: 6
print_type (81)
    on left: 67 68, on right: 66
comment_stat (82)
    on left: 69 70, on right: 7
initializer (83)
    on left: 71 72 73, on right: 9 15
asgn (84)
    on left: 74 75 76 77 78 79, on right: 26
arithmetic_postfix (85)
    on left: 80 81, on right: 27 45
type (86)
    on left: 82 83 84 85 86, on right: 15 16 17 19 20 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 2

    0 $accept: program $end .

    $default  accept


State 3

   82 type: INT .

    $default  reduce using rule 82 (type)


State 4

   83 type: FLOAT .

    $default  reduce using rule 83 (type)


State 5

   85 type: STRING .

    $default  reduce using rule 85 (type)


State 6

   84 type: BOOL .

    $default  reduce using rule 84 (type)


State 7

   86 type: VOID .

    $default  reduce using rule 86 (type)


State 8

   66 print_func: PRINT . LB print_type

    LB  shift, and go to state 23


State 9

   50 iteration_stat: IF . LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB  shift, and go to state 24


State 10

   47 iteration_stat: WHILE . LB expression_stat RB LCB $@3 mul_stat RCB

    LB  shift, and go to state 25


State 11

   26 expression: ID . asgn expression_stat SEMICOLON
   27           | ID . arithmetic_postfix SEMICOLON
   29           | ID . LB func_call RB $@2 SEMICOLON
   30           | ID . LB RB SEMICOLON

    INC      shift, and go to state 26
    DEC      shift, and go to state 27
    ASGN     shift, and go to state 28
    ADDASGN  shift, and go to state 29
    SUBASGN  shift, and go to state 30
    MULASGN  shift, and go to state 31
    DIVASGN  shift, and go to state 32
    MODASGN  shift, and go to state 33
    LB       shift, and go to state 34

    asgn                go to state 35
    arithmetic_postfix  go to state 36


State 12

   31 expression: SEMICOLON .

    $default  reduce using rule 31 (expression)


State 13

    8 stat: RET . return_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    return_stat          go to state 44
    expression_stat      go to state 45
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 49


State 14

   70 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 50


State 15

   69 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 69 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 18

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 19

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 20

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 21

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 22

   15 declaration: type . ID ASGN initializer SEMICOLON
   16            | type . ID SEMICOLON
   17            | type . ID ASGN expression_stat SEMICOLON
   19            | type . ID LB $@1 func

    ID  shift, and go to state 51


State 23

   66 print_func: PRINT LB . print_type

    ID       shift, and go to state 52
    S_CONST  shift, and go to state 53

    print_type  go to state 54


State 24

   50 iteration_stat: IF LB . expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 55
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 25

   47 iteration_stat: WHILE LB . expression_stat RB LCB $@3 mul_stat RCB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 56
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 26

   80 arithmetic_postfix: INC .

    $default  reduce using rule 80 (arithmetic_postfix)


State 27

   81 arithmetic_postfix: DEC .

    $default  reduce using rule 81 (arithmetic_postfix)


State 28

   74 asgn: ASGN .

    $default  reduce using rule 74 (asgn)


State 29

   75 asgn: ADDASGN .

    $default  reduce using rule 75 (asgn)


State 30

   76 asgn: SUBASGN .

    $default  reduce using rule 76 (asgn)


State 31

   77 asgn: MULASGN .

    $default  reduce using rule 77 (asgn)


State 32

   78 asgn: DIVASGN .

    $default  reduce using rule 78 (asgn)


State 33

   79 asgn: MODASGN .

    $default  reduce using rule 79 (asgn)


State 34

   29 expression: ID LB . func_call RB $@2 SEMICOLON
   30           | ID LB . RB SEMICOLON

    LB       shift, and go to state 37
    RB       shift, and go to state 57
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 58

    func_call            go to state 59
    const                go to state 60
    expression_stat      go to state 61
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 35

   26 expression: ID asgn . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 62
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 36

   27 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 37

   44 factor: LB . expression_stat RB

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 64
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 38

   43 factor: ID .
   45       | ID . arithmetic_postfix

    INC  shift, and go to state 26
    DEC  shift, and go to state 27

    $default  reduce using rule 43 (factor)

    arithmetic_postfix  go to state 65


State 39

   41 factor: I_CONST .

    $default  reduce using rule 41 (factor)


State 40

   42 factor: F_CONST .

    $default  reduce using rule 42 (factor)


State 41

   71 initializer: S_CONST .

    $default  reduce using rule 71 (initializer)


State 42

   72 initializer: TRUE .

    $default  reduce using rule 72 (initializer)


State 43

   73 initializer: FALSE .

    $default  reduce using rule 73 (initializer)


State 44

    8 stat: RET return_stat .

    $default  reduce using rule 8 (stat)


State 45

   10 return_stat: expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 66
    LT         shift, and go to state 67
    MTE        shift, and go to state 68
    LTE        shift, and go to state 69
    EQ         shift, and go to state 70
    NE         shift, and go to state 71
    SEMICOLON  shift, and go to state 72

    relational  go to state 73


State 46

   33 expression_stat: add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75

    $default  reduce using rule 33 (expression_stat)


State 47

   36 add_expression_stat: mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 36 (add_expression_stat)


State 48

   40 mul_expression_stat: factor .

    $default  reduce using rule 40 (mul_expression_stat)


State 49

    9 return_stat: initializer . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 50

   70 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 70 (comment_stat)


State 51

   15 declaration: type ID . ASGN initializer SEMICOLON
   16            | type ID . SEMICOLON
   17            | type ID . ASGN expression_stat SEMICOLON
   19            | type ID . LB $@1 func

    ASGN       shift, and go to state 80
    LB         shift, and go to state 81
    SEMICOLON  shift, and go to state 82


State 52

   68 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 83


State 53

   67 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 84


State 54

   66 print_func: PRINT LB print_type .

    $default  reduce using rule 66 (print_func)


State 55

   32 expression_stat: expression_stat . relational add_expression_stat
   50 iteration_stat: IF LB expression_stat . RB LCB $@4 mul_stat RCB $@5 haselse

    MT   shift, and go to state 66
    LT   shift, and go to state 67
    MTE  shift, and go to state 68
    LTE  shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71
    RB   shift, and go to state 85

    relational  go to state 73


State 56

   32 expression_stat: expression_stat . relational add_expression_stat
   47 iteration_stat: WHILE LB expression_stat . RB LCB $@3 mul_stat RCB

    MT   shift, and go to state 66
    LT   shift, and go to state 67
    MTE  shift, and go to state 68
    LTE  shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71
    RB   shift, and go to state 86

    relational  go to state 73


State 57

   30 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 58

   24 const: S_CONST .

    $default  reduce using rule 24 (const)


State 59

   22 func_call: func_call . COMMA const
   29 expression: ID LB func_call . RB $@2 SEMICOLON

    RB     shift, and go to state 88
    COMMA  shift, and go to state 89


State 60

   23 func_call: const .

    $default  reduce using rule 23 (func_call)


State 61

   25 const: expression_stat .
   32 expression_stat: expression_stat . relational add_expression_stat

    MT   shift, and go to state 66
    LT   shift, and go to state 67
    MTE  shift, and go to state 68
    LTE  shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71

    $default  reduce using rule 25 (const)

    relational  go to state 73


State 62

   26 expression: ID asgn expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 66
    LT         shift, and go to state 67
    MTE        shift, and go to state 68
    LTE        shift, and go to state 69
    EQ         shift, and go to state 70
    NE         shift, and go to state 71
    SEMICOLON  shift, and go to state 90

    relational  go to state 73


State 63

   27 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 27 (expression)


State 64

   32 expression_stat: expression_stat . relational add_expression_stat
   44 factor: LB expression_stat . RB

    MT   shift, and go to state 66
    LT   shift, and go to state 67
    MTE  shift, and go to state 68
    LTE  shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71
    RB   shift, and go to state 91

    relational  go to state 73


State 65

   45 factor: ID arithmetic_postfix .

    $default  reduce using rule 45 (factor)


State 66

   60 relational: MT .

    $default  reduce using rule 60 (relational)


State 67

   61 relational: LT .

    $default  reduce using rule 61 (relational)


State 68

   62 relational: MTE .

    $default  reduce using rule 62 (relational)


State 69

   63 relational: LTE .

    $default  reduce using rule 63 (relational)


State 70

   64 relational: EQ .

    $default  reduce using rule 64 (relational)


State 71

   65 relational: NE .

    $default  reduce using rule 65 (relational)


State 72

   10 return_stat: expression_stat SEMICOLON .

    $default  reduce using rule 10 (return_stat)


State 73

   32 expression_stat: expression_stat relational . add_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    add_expression_stat  go to state 92
    mul_expression_stat  go to state 47
    factor               go to state 48


State 74

   34 add_expression_stat: add_expression_stat ADD . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 93
    factor               go to state 48


State 75

   35 add_expression_stat: add_expression_stat SUB . mul_expression_stat

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    mul_expression_stat  go to state 94
    factor               go to state 48


State 76

   37 mul_expression_stat: mul_expression_stat MUL . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 95


State 77

   38 mul_expression_stat: mul_expression_stat DIV . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 96


State 78

   39 mul_expression_stat: mul_expression_stat MOD . factor

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    factor  go to state 97


State 79

    9 return_stat: initializer SEMICOLON .

    $default  reduce using rule 9 (return_stat)


State 80

   15 declaration: type ID ASGN . initializer SEMICOLON
   17            | type ID ASGN . expression_stat SEMICOLON

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43

    expression_stat      go to state 98
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48
    initializer          go to state 99


State 81

   19 declaration: type ID LB . $@1 func

    $default  reduce using rule 18 ($@1)

    $@1  go to state 100


State 82

   16 declaration: type ID SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 83

   68 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 101


State 84

   67 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 102


State 85

   50 iteration_stat: IF LB expression_stat RB . LCB $@4 mul_stat RCB $@5 haselse

    LCB  shift, and go to state 103


State 86

   47 iteration_stat: WHILE LB expression_stat RB . LCB $@3 mul_stat RCB

    LCB  shift, and go to state 104


State 87

   30 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 30 (expression)


State 88

   29 expression: ID LB func_call RB . $@2 SEMICOLON

    $default  reduce using rule 28 ($@2)

    $@2  go to state 105


State 89

   22 func_call: func_call COMMA . const

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40
    S_CONST  shift, and go to state 58

    const                go to state 106
    expression_stat      go to state 61
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 90

   26 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 26 (expression)


State 91

   44 factor: LB expression_stat RB .

    $default  reduce using rule 44 (factor)


State 92

   32 expression_stat: expression_stat relational add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 74
    SUB  shift, and go to state 75

    $default  reduce using rule 32 (expression_stat)


State 93

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 34 (add_expression_stat)


State 94

   35 add_expression_stat: add_expression_stat SUB mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 35 (add_expression_stat)


State 95

   37 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 96

   38 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 38 (mul_expression_stat)


State 97

   39 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 39 (mul_expression_stat)


State 98

   17 declaration: type ID ASGN expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 66
    LT         shift, and go to state 67
    MTE        shift, and go to state 68
    LTE        shift, and go to state 69
    EQ         shift, and go to state 70
    NE         shift, and go to state 71
    SEMICOLON  shift, and go to state 107

    relational  go to state 73


State 99

   15 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 100

   19 declaration: type ID LB $@1 . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 109

    func            go to state 110
    func_parameter  go to state 111
    type            go to state 112


State 101

   68 print_type: ID RB SEMICOLON .

    $default  reduce using rule 68 (print_type)


State 102

   67 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 67 (print_type)


State 103

   50 iteration_stat: IF LB expression_stat RB LCB . $@4 mul_stat RCB $@5 haselse

    $default  reduce using rule 48 ($@4)

    $@4  go to state 113


State 104

   47 iteration_stat: WHILE LB expression_stat RB LCB . $@3 mul_stat RCB

    $default  reduce using rule 46 ($@3)

    $@3  go to state 114


State 105

   29 expression: ID LB func_call RB $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 106

   22 func_call: func_call COMMA const .

    $default  reduce using rule 22 (func_call)


State 107

   17 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 108

   15 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 109

   12 func: RB . func_end

    LCB        shift, and go to state 116
    SEMICOLON  shift, and go to state 117

    func_end  go to state 118


State 110

   19 declaration: type ID LB $@1 func .

    $default  reduce using rule 19 (declaration)


State 111

   11 func: func_parameter . RB func_end
   20 func_parameter: func_parameter . COMMA type ID

    RB     shift, and go to state 119
    COMMA  shift, and go to state 120


State 112

   21 func_parameter: type . ID

    ID  shift, and go to state 121


State 113

   50 iteration_stat: IF LB expression_stat RB LCB $@4 . mul_stat RCB $@5 haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 123
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 114

   47 iteration_stat: WHILE LB expression_stat RB LCB $@3 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 124
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 115

   29 expression: ID LB func_call RB $@2 SEMICOLON .

    $default  reduce using rule 29 (expression)


State 116

   14 func_end: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 125
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 117

   13 func_end: SEMICOLON .

    $default  reduce using rule 13 (func_end)


State 118

   12 func: RB func_end .

    $default  reduce using rule 12 (func)


State 119

   11 func: func_parameter RB . func_end

    LCB        shift, and go to state 116
    SEMICOLON  shift, and go to state 117

    func_end  go to state 126


State 120

   20 func_parameter: func_parameter COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 127


State 121

   21 func_parameter: type ID .

    $default  reduce using rule 21 (func_parameter)


State 122

   58 mul_stat: stat . mul_stat
   59         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 59 (mul_stat)

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 128
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 123

   50 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat . RCB $@5 haselse

    RCB  shift, and go to state 129


State 124

   47 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat . RCB

    RCB  shift, and go to state 130


State 125

   14 func_end: LCB mul_stat . RCB

    RCB  shift, and go to state 131


State 126

   11 func: func_parameter RB func_end .

    $default  reduce using rule 11 (func)


State 127

   20 func_parameter: func_parameter COMMA type . ID

    ID  shift, and go to state 132


State 128

   58 mul_stat: stat mul_stat .

    $default  reduce using rule 58 (mul_stat)


State 129

   50 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB . $@5 haselse

    $default  reduce using rule 49 ($@5)

    $@5  go to state 133


State 130

   47 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB .

    $default  reduce using rule 47 (iteration_stat)


State 131

   14 func_end: LCB mul_stat RCB .

    $default  reduce using rule 14 (func_end)


State 132

   20 func_parameter: func_parameter COMMA type ID .

    $default  reduce using rule 20 (func_parameter)


State 133

   50 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 . haselse

    ELSE  shift, and go to state 134

    $default  reduce using rule 53 (haselse)

    haselse  go to state 135


State 134

   52 haselse: ELSE . haselseif LCB $@6 mul_stat RCB

    IF  shift, and go to state 136

    $default  reduce using rule 55 (haselseif)

    haselseif  go to state 137


State 135

   50 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse .

    $default  reduce using rule 50 (iteration_stat)


State 136

   54 haselseif: IF . LB expression_stat RB LCB mul_stat RCB moreelseif

    LB  shift, and go to state 138


State 137

   52 haselse: ELSE haselseif . LCB $@6 mul_stat RCB

    LCB  shift, and go to state 139


State 138

   54 haselseif: IF LB . expression_stat RB LCB mul_stat RCB moreelseif

    LB       shift, and go to state 37
    ID       shift, and go to state 38
    I_CONST  shift, and go to state 39
    F_CONST  shift, and go to state 40

    expression_stat      go to state 140
    add_expression_stat  go to state 46
    mul_expression_stat  go to state 47
    factor               go to state 48


State 139

   52 haselse: ELSE haselseif LCB . $@6 mul_stat RCB

    $default  reduce using rule 51 ($@6)

    $@6  go to state 141


State 140

   32 expression_stat: expression_stat . relational add_expression_stat
   54 haselseif: IF LB expression_stat . RB LCB mul_stat RCB moreelseif

    MT   shift, and go to state 66
    LT   shift, and go to state 67
    MTE  shift, and go to state 68
    LTE  shift, and go to state 69
    EQ   shift, and go to state 70
    NE   shift, and go to state 71
    RB   shift, and go to state 142

    relational  go to state 73


State 141

   52 haselse: ELSE haselseif LCB $@6 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 143
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 142

   54 haselseif: IF LB expression_stat RB . LCB mul_stat RCB moreelseif

    LCB  shift, and go to state 144


State 143

   52 haselse: ELSE haselseif LCB $@6 mul_stat . RCB

    RCB  shift, and go to state 145


State 144

   54 haselseif: IF LB expression_stat RB LCB . mul_stat RCB moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 122
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 146
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 145

   52 haselse: ELSE haselseif LCB $@6 mul_stat RCB .

    $default  reduce using rule 52 (haselse)


State 146

   54 haselseif: IF LB expression_stat RB LCB mul_stat . RCB moreelseif

    RCB  shift, and go to state 147


State 147

   54 haselseif: IF LB expression_stat RB LCB mul_stat RCB . moreelseif

    ELSE  shift, and go to state 148

    $default  reduce using rule 57 (moreelseif)

    moreelseif  go to state 149


State 148

   56 moreelseif: ELSE . haselseif

    IF  shift, and go to state 136

    $default  reduce using rule 55 (haselseif)

    haselseif  go to state 150


State 149

   54 haselseif: IF LB expression_stat RB LCB mul_stat RCB moreelseif .

    $default  reduce using rule 54 (haselseif)


State 150

   56 moreelseif: ELSE haselseif .

    $default  reduce using rule 56 (moreelseif)
