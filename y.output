Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | expression
    5     | iteration_stat
    6     | print_func
    7     | comment_stat
    8     | RET return_stat

    9 return_stat: initializer SEMICOLON
   10            | expression_stat SEMICOLON

   11 func: func_parameter RB func_end
   12     | RB func_end

   13 func_end: SEMICOLON
   14         | LCB mul_stat RCB

   15 declaration: type ID ASGN initializer SEMICOLON
   16            | type ID SEMICOLON
   17            | type ID ASGN expression_stat SEMICOLON

   18 $@1: %empty

   19 declaration: type ID LB $@1 func

   20 func_parameter: func_parameter COMMA type ID
   21               | type ID

   22 func_call: func_call COMMA const
   23          | const

   24 const: S_CONST
   25      | expression_stat

   26 expression: ID asgn expression_stat SEMICOLON
   27           | ID arithmetic_postfix SEMICOLON

   28 $@2: %empty

   29 expression: ID LB func_call RB $@2 SEMICOLON
   30           | ID LB RB SEMICOLON
   31           | SEMICOLON

   32 expression_stat: expression_stat relational add_expression_stat
   33                | add_expression_stat

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat
   35                    | add_expression_stat SUB mul_expression_stat
   36                    | mul_expression_stat

   37 mul_expression_stat: mul_expression_stat MUL factor
   38                    | mul_expression_stat DIV factor
   39                    | mul_expression_stat MOD factor
   40                    | factor

   41 factor: I_CONST
   42       | F_CONST
   43       | SUB I_CONST
   44       | SUB F_CONST
   45       | ID
   46       | LB expression_stat RB
   47       | ID arithmetic_postfix
   48       | ID LB func_call RB

   49 $@3: %empty

   50 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB

   51 $@4: %empty

   52 $@5: %empty

   53 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

   54 haselse: ELSE haselseif
   55        | %empty

   56 $@6: %empty

   57 $@7: %empty

   58 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

   59 $@8: %empty

   60 haselseif: LCB $@8 mul_stat RCB

   61 moreelseif: ELSE haselseif
   62           | %empty

   63 mul_stat: stat mul_stat
   64         | stat

   65 relational: MT
   66           | LT
   67           | MTE
   68           | LTE
   69           | EQ
   70           | NE

   71 print_func: PRINT LB print_type

   72 print_type: S_CONST RB SEMICOLON
   73           | ID RB SEMICOLON

   74 comment_stat: CPLUS_COMMENT
   75             | START_COMMENT END_COMMENT

   76 initializer: S_CONST
   77            | TRUE
   78            | FALSE

   79 asgn: ASGN
   80     | ADDASGN
   81     | SUBASGN
   82     | MULASGN
   83     | DIVASGN
   84     | MODASGN

   85 arithmetic_postfix: INC
   86                   | DEC

   87 type: INT
   88     | FLOAT
   89     | BOOL
   90     | STRING
   91     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 87
FLOAT (259) 88
STRING (260) 90
BOOL (261) 89
VOID (262) 91
ADD (263) 34
SUB (264) 35 43 44
MUL (265) 37
DIV (266) 38
MOD (267) 39
INC (268) 85
DEC (269) 86
MT (270) 65
LT (271) 66
MTE (272) 67
LTE (273) 68
EQ (274) 69
NE (275) 70
ASGN (276) 15 17 79
ADDASGN (277) 80
SUBASGN (278) 81
MULASGN (279) 82
DIVASGN (280) 83
MODASGN (281) 84
AND (282)
OR (283)
NOT (284)
LB (285) 19 29 30 46 48 50 53 58 71
RB (286) 11 12 29 30 46 48 50 53 58 72 73
LCB (287) 14 50 53 58 60
RCB (288) 14 50 53 58 60
LSB (289)
RSB (290)
COMMA (291) 20 22
PRINT (292) 71
IF (293) 53 58
ELSE (294) 54 61
FOR (295)
WHILE (296) 50
ID (297) 15 16 17 19 20 21 26 27 29 30 45 47 48 73
SEMICOLON (298) 9 10 13 15 16 17 26 27 29 30 31 72 73
RET (299) 8
START_COMMENT (300) 75
END_COMMENT (301) 75
CPLUS_COMMENT (302) 74
I_CONST (303) 41 43
F_CONST (304) 42 44
S_CONST (305) 24 72 76
TRUE (306) 77
FALSE (307) 78


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8, on right: 1 63 64
return_stat (56)
    on left: 9 10, on right: 8
func (57)
    on left: 11 12, on right: 19
func_end (58)
    on left: 13 14, on right: 11 12
declaration (59)
    on left: 15 16 17 19, on right: 3
$@1 (60)
    on left: 18, on right: 19
func_parameter (61)
    on left: 20 21, on right: 11 20
func_call (62)
    on left: 22 23, on right: 22 29 48
const (63)
    on left: 24 25, on right: 22 23
expression (64)
    on left: 26 27 29 30 31, on right: 4
$@2 (65)
    on left: 28, on right: 29
expression_stat (66)
    on left: 32 33, on right: 10 17 25 26 32 46 50 53 58
add_expression_stat (67)
    on left: 34 35 36, on right: 32 33 34 35
mul_expression_stat (68)
    on left: 37 38 39 40, on right: 34 35 36 37 38 39
factor (69)
    on left: 41 42 43 44 45 46 47 48, on right: 37 38 39 40
iteration_stat (70)
    on left: 50 53, on right: 5
$@3 (71)
    on left: 49, on right: 50
$@4 (72)
    on left: 51, on right: 53
$@5 (73)
    on left: 52, on right: 53
haselse (74)
    on left: 54 55, on right: 53
haselseif (75)
    on left: 58 60, on right: 54 61
$@6 (76)
    on left: 56, on right: 58
$@7 (77)
    on left: 57, on right: 58
$@8 (78)
    on left: 59, on right: 60
moreelseif (79)
    on left: 61 62, on right: 58
mul_stat (80)
    on left: 63 64, on right: 14 50 53 58 60 63
relational (81)
    on left: 65 66 67 68 69 70, on right: 32
print_func (82)
    on left: 71, on right: 6
print_type (83)
    on left: 72 73, on right: 71
comment_stat (84)
    on left: 74 75, on right: 7
initializer (85)
    on left: 76 77 78, on right: 9 15
asgn (86)
    on left: 79 80 81 82 83 84, on right: 26
arithmetic_postfix (87)
    on left: 85 86, on right: 27 47
type (88)
    on left: 87 88 89 90 91, on right: 15 16 17 19 20 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 16
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 2

    0 $accept: program $end .

    $default  accept


State 3

   87 type: INT .

    $default  reduce using rule 87 (type)


State 4

   88 type: FLOAT .

    $default  reduce using rule 88 (type)


State 5

   90 type: STRING .

    $default  reduce using rule 90 (type)


State 6

   89 type: BOOL .

    $default  reduce using rule 89 (type)


State 7

   91 type: VOID .

    $default  reduce using rule 91 (type)


State 8

   71 print_func: PRINT . LB print_type

    LB  shift, and go to state 23


State 9

   53 iteration_stat: IF . LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB  shift, and go to state 24


State 10

   50 iteration_stat: WHILE . LB expression_stat RB LCB $@3 mul_stat RCB

    LB  shift, and go to state 25


State 11

   26 expression: ID . asgn expression_stat SEMICOLON
   27           | ID . arithmetic_postfix SEMICOLON
   29           | ID . LB func_call RB $@2 SEMICOLON
   30           | ID . LB RB SEMICOLON

    INC      shift, and go to state 26
    DEC      shift, and go to state 27
    ASGN     shift, and go to state 28
    ADDASGN  shift, and go to state 29
    SUBASGN  shift, and go to state 30
    MULASGN  shift, and go to state 31
    DIVASGN  shift, and go to state 32
    MODASGN  shift, and go to state 33
    LB       shift, and go to state 34

    asgn                go to state 35
    arithmetic_postfix  go to state 36


State 12

   31 expression: SEMICOLON .

    $default  reduce using rule 31 (expression)


State 13

    8 stat: RET . return_stat

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41
    S_CONST  shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44

    return_stat          go to state 45
    expression_stat      go to state 46
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49
    initializer          go to state 50


State 14

   75 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 51


State 15

   74 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 74 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 18

    4 stat: expression .

    $default  reduce using rule 4 (stat)


State 19

    5 stat: iteration_stat .

    $default  reduce using rule 5 (stat)


State 20

    6 stat: print_func .

    $default  reduce using rule 6 (stat)


State 21

    7 stat: comment_stat .

    $default  reduce using rule 7 (stat)


State 22

   15 declaration: type . ID ASGN initializer SEMICOLON
   16            | type . ID SEMICOLON
   17            | type . ID ASGN expression_stat SEMICOLON
   19            | type . ID LB $@1 func

    ID  shift, and go to state 52


State 23

   71 print_func: PRINT LB . print_type

    ID       shift, and go to state 53
    S_CONST  shift, and go to state 54

    print_type  go to state 55


State 24

   53 iteration_stat: IF LB . expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    expression_stat      go to state 56
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 25

   50 iteration_stat: WHILE LB . expression_stat RB LCB $@3 mul_stat RCB

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    expression_stat      go to state 57
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 26

   85 arithmetic_postfix: INC .

    $default  reduce using rule 85 (arithmetic_postfix)


State 27

   86 arithmetic_postfix: DEC .

    $default  reduce using rule 86 (arithmetic_postfix)


State 28

   79 asgn: ASGN .

    $default  reduce using rule 79 (asgn)


State 29

   80 asgn: ADDASGN .

    $default  reduce using rule 80 (asgn)


State 30

   81 asgn: SUBASGN .

    $default  reduce using rule 81 (asgn)


State 31

   82 asgn: MULASGN .

    $default  reduce using rule 82 (asgn)


State 32

   83 asgn: DIVASGN .

    $default  reduce using rule 83 (asgn)


State 33

   84 asgn: MODASGN .

    $default  reduce using rule 84 (asgn)


State 34

   29 expression: ID LB . func_call RB $@2 SEMICOLON
   30           | ID LB . RB SEMICOLON

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    RB       shift, and go to state 58
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41
    S_CONST  shift, and go to state 59

    func_call            go to state 60
    const                go to state 61
    expression_stat      go to state 62
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 35

   26 expression: ID asgn . expression_stat SEMICOLON

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    expression_stat      go to state 63
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 36

   27 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 37

   43 factor: SUB . I_CONST
   44       | SUB . F_CONST

    I_CONST  shift, and go to state 65
    F_CONST  shift, and go to state 66


State 38

   46 factor: LB . expression_stat RB

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    expression_stat      go to state 67
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 39

   45 factor: ID .
   47       | ID . arithmetic_postfix
   48       | ID . LB func_call RB

    INC  shift, and go to state 26
    DEC  shift, and go to state 27
    LB   shift, and go to state 68

    $default  reduce using rule 45 (factor)

    arithmetic_postfix  go to state 69


State 40

   41 factor: I_CONST .

    $default  reduce using rule 41 (factor)


State 41

   42 factor: F_CONST .

    $default  reduce using rule 42 (factor)


State 42

   76 initializer: S_CONST .

    $default  reduce using rule 76 (initializer)


State 43

   77 initializer: TRUE .

    $default  reduce using rule 77 (initializer)


State 44

   78 initializer: FALSE .

    $default  reduce using rule 78 (initializer)


State 45

    8 stat: RET return_stat .

    $default  reduce using rule 8 (stat)


State 46

   10 return_stat: expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 70
    LT         shift, and go to state 71
    MTE        shift, and go to state 72
    LTE        shift, and go to state 73
    EQ         shift, and go to state 74
    NE         shift, and go to state 75
    SEMICOLON  shift, and go to state 76

    relational  go to state 77


State 47

   33 expression_stat: add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 33 (expression_stat)


State 48

   36 add_expression_stat: mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81
    MOD  shift, and go to state 82

    $default  reduce using rule 36 (add_expression_stat)


State 49

   40 mul_expression_stat: factor .

    $default  reduce using rule 40 (mul_expression_stat)


State 50

    9 return_stat: initializer . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 51

   75 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 75 (comment_stat)


State 52

   15 declaration: type ID . ASGN initializer SEMICOLON
   16            | type ID . SEMICOLON
   17            | type ID . ASGN expression_stat SEMICOLON
   19            | type ID . LB $@1 func

    ASGN       shift, and go to state 84
    LB         shift, and go to state 85
    SEMICOLON  shift, and go to state 86


State 53

   73 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 87


State 54

   72 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 88


State 55

   71 print_func: PRINT LB print_type .

    $default  reduce using rule 71 (print_func)


State 56

   32 expression_stat: expression_stat . relational add_expression_stat
   53 iteration_stat: IF LB expression_stat . RB LCB $@4 mul_stat RCB $@5 haselse

    MT   shift, and go to state 70
    LT   shift, and go to state 71
    MTE  shift, and go to state 72
    LTE  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    RB   shift, and go to state 89

    relational  go to state 77


State 57

   32 expression_stat: expression_stat . relational add_expression_stat
   50 iteration_stat: WHILE LB expression_stat . RB LCB $@3 mul_stat RCB

    MT   shift, and go to state 70
    LT   shift, and go to state 71
    MTE  shift, and go to state 72
    LTE  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    RB   shift, and go to state 90

    relational  go to state 77


State 58

   30 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 59

   24 const: S_CONST .

    $default  reduce using rule 24 (const)


State 60

   22 func_call: func_call . COMMA const
   29 expression: ID LB func_call . RB $@2 SEMICOLON

    RB     shift, and go to state 92
    COMMA  shift, and go to state 93


State 61

   23 func_call: const .

    $default  reduce using rule 23 (func_call)


State 62

   25 const: expression_stat .
   32 expression_stat: expression_stat . relational add_expression_stat

    MT   shift, and go to state 70
    LT   shift, and go to state 71
    MTE  shift, and go to state 72
    LTE  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75

    $default  reduce using rule 25 (const)

    relational  go to state 77


State 63

   26 expression: ID asgn expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 70
    LT         shift, and go to state 71
    MTE        shift, and go to state 72
    LTE        shift, and go to state 73
    EQ         shift, and go to state 74
    NE         shift, and go to state 75
    SEMICOLON  shift, and go to state 94

    relational  go to state 77


State 64

   27 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 27 (expression)


State 65

   43 factor: SUB I_CONST .

    $default  reduce using rule 43 (factor)


State 66

   44 factor: SUB F_CONST .

    $default  reduce using rule 44 (factor)


State 67

   32 expression_stat: expression_stat . relational add_expression_stat
   46 factor: LB expression_stat . RB

    MT   shift, and go to state 70
    LT   shift, and go to state 71
    MTE  shift, and go to state 72
    LTE  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    RB   shift, and go to state 95

    relational  go to state 77


State 68

   48 factor: ID LB . func_call RB

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41
    S_CONST  shift, and go to state 59

    func_call            go to state 96
    const                go to state 61
    expression_stat      go to state 62
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 69

   47 factor: ID arithmetic_postfix .

    $default  reduce using rule 47 (factor)


State 70

   65 relational: MT .

    $default  reduce using rule 65 (relational)


State 71

   66 relational: LT .

    $default  reduce using rule 66 (relational)


State 72

   67 relational: MTE .

    $default  reduce using rule 67 (relational)


State 73

   68 relational: LTE .

    $default  reduce using rule 68 (relational)


State 74

   69 relational: EQ .

    $default  reduce using rule 69 (relational)


State 75

   70 relational: NE .

    $default  reduce using rule 70 (relational)


State 76

   10 return_stat: expression_stat SEMICOLON .

    $default  reduce using rule 10 (return_stat)


State 77

   32 expression_stat: expression_stat relational . add_expression_stat

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    add_expression_stat  go to state 97
    mul_expression_stat  go to state 48
    factor               go to state 49


State 78

   34 add_expression_stat: add_expression_stat ADD . mul_expression_stat

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    mul_expression_stat  go to state 98
    factor               go to state 49


State 79

   35 add_expression_stat: add_expression_stat SUB . mul_expression_stat

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    mul_expression_stat  go to state 99
    factor               go to state 49


State 80

   37 mul_expression_stat: mul_expression_stat MUL . factor

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    factor  go to state 100


State 81

   38 mul_expression_stat: mul_expression_stat DIV . factor

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    factor  go to state 101


State 82

   39 mul_expression_stat: mul_expression_stat MOD . factor

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    factor  go to state 102


State 83

    9 return_stat: initializer SEMICOLON .

    $default  reduce using rule 9 (return_stat)


State 84

   15 declaration: type ID ASGN . initializer SEMICOLON
   17            | type ID ASGN . expression_stat SEMICOLON

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41
    S_CONST  shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44

    expression_stat      go to state 103
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49
    initializer          go to state 104


State 85

   19 declaration: type ID LB . $@1 func

    $default  reduce using rule 18 ($@1)

    $@1  go to state 105


State 86

   16 declaration: type ID SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 87

   73 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 88

   72 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 89

   53 iteration_stat: IF LB expression_stat RB . LCB $@4 mul_stat RCB $@5 haselse

    LCB  shift, and go to state 108


State 90

   50 iteration_stat: WHILE LB expression_stat RB . LCB $@3 mul_stat RCB

    LCB  shift, and go to state 109


State 91

   30 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 30 (expression)


State 92

   29 expression: ID LB func_call RB . $@2 SEMICOLON

    $default  reduce using rule 28 ($@2)

    $@2  go to state 110


State 93

   22 func_call: func_call COMMA . const

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41
    S_CONST  shift, and go to state 59

    const                go to state 111
    expression_stat      go to state 62
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 94

   26 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 26 (expression)


State 95

   46 factor: LB expression_stat RB .

    $default  reduce using rule 46 (factor)


State 96

   22 func_call: func_call . COMMA const
   48 factor: ID LB func_call . RB

    RB     shift, and go to state 112
    COMMA  shift, and go to state 93


State 97

   32 expression_stat: expression_stat relational add_expression_stat .
   34 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   35                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 32 (expression_stat)


State 98

   34 add_expression_stat: add_expression_stat ADD mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81
    MOD  shift, and go to state 82

    $default  reduce using rule 34 (add_expression_stat)


State 99

   35 add_expression_stat: add_expression_stat SUB mul_expression_stat .
   37 mul_expression_stat: mul_expression_stat . MUL factor
   38                    | mul_expression_stat . DIV factor
   39                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81
    MOD  shift, and go to state 82

    $default  reduce using rule 35 (add_expression_stat)


State 100

   37 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 37 (mul_expression_stat)


State 101

   38 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 38 (mul_expression_stat)


State 102

   39 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 39 (mul_expression_stat)


State 103

   17 declaration: type ID ASGN expression_stat . SEMICOLON
   32 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 70
    LT         shift, and go to state 71
    MTE        shift, and go to state 72
    LTE        shift, and go to state 73
    EQ         shift, and go to state 74
    NE         shift, and go to state 75
    SEMICOLON  shift, and go to state 113

    relational  go to state 77


State 104

   15 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 105

   19 declaration: type ID LB $@1 . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 115

    func            go to state 116
    func_parameter  go to state 117
    type            go to state 118


State 106

   73 print_type: ID RB SEMICOLON .

    $default  reduce using rule 73 (print_type)


State 107

   72 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 72 (print_type)


State 108

   53 iteration_stat: IF LB expression_stat RB LCB . $@4 mul_stat RCB $@5 haselse

    $default  reduce using rule 51 ($@4)

    $@4  go to state 119


State 109

   50 iteration_stat: WHILE LB expression_stat RB LCB . $@3 mul_stat RCB

    $default  reduce using rule 49 ($@3)

    $@3  go to state 120


State 110

   29 expression: ID LB func_call RB $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 111

   22 func_call: func_call COMMA const .

    $default  reduce using rule 22 (func_call)


State 112

   48 factor: ID LB func_call RB .

    $default  reduce using rule 48 (factor)


State 113

   17 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 17 (declaration)


State 114

   15 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 115

   12 func: RB . func_end

    LCB        shift, and go to state 122
    SEMICOLON  shift, and go to state 123

    func_end  go to state 124


State 116

   19 declaration: type ID LB $@1 func .

    $default  reduce using rule 19 (declaration)


State 117

   11 func: func_parameter . RB func_end
   20 func_parameter: func_parameter . COMMA type ID

    RB     shift, and go to state 125
    COMMA  shift, and go to state 126


State 118

   21 func_parameter: type . ID

    ID  shift, and go to state 127


State 119

   53 iteration_stat: IF LB expression_stat RB LCB $@4 . mul_stat RCB $@5 haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 129
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 120

   50 iteration_stat: WHILE LB expression_stat RB LCB $@3 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 130
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 121

   29 expression: ID LB func_call RB $@2 SEMICOLON .

    $default  reduce using rule 29 (expression)


State 122

   14 func_end: LCB . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 131
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 123

   13 func_end: SEMICOLON .

    $default  reduce using rule 13 (func_end)


State 124

   12 func: RB func_end .

    $default  reduce using rule 12 (func)


State 125

   11 func: func_parameter RB . func_end

    LCB        shift, and go to state 122
    SEMICOLON  shift, and go to state 123

    func_end  go to state 132


State 126

   20 func_parameter: func_parameter COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 133


State 127

   21 func_parameter: type ID .

    $default  reduce using rule 21 (func_parameter)


State 128

   63 mul_stat: stat . mul_stat
   64         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 64 (mul_stat)

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 134
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 129

   53 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat . RCB $@5 haselse

    RCB  shift, and go to state 135


State 130

   50 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat . RCB

    RCB  shift, and go to state 136


State 131

   14 func_end: LCB mul_stat . RCB

    RCB  shift, and go to state 137


State 132

   11 func: func_parameter RB func_end .

    $default  reduce using rule 11 (func)


State 133

   20 func_parameter: func_parameter COMMA type . ID

    ID  shift, and go to state 138


State 134

   63 mul_stat: stat mul_stat .

    $default  reduce using rule 63 (mul_stat)


State 135

   53 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB . $@5 haselse

    $default  reduce using rule 52 ($@5)

    $@5  go to state 139


State 136

   50 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB .

    $default  reduce using rule 50 (iteration_stat)


State 137

   14 func_end: LCB mul_stat RCB .

    $default  reduce using rule 14 (func_end)


State 138

   20 func_parameter: func_parameter COMMA type ID .

    $default  reduce using rule 20 (func_parameter)


State 139

   53 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 . haselse

    ELSE  shift, and go to state 140

    $default  reduce using rule 55 (haselse)

    haselse  go to state 141


State 140

   54 haselse: ELSE . haselseif

    LCB  shift, and go to state 142
    IF   shift, and go to state 143

    haselseif  go to state 144


State 141

   53 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse .

    $default  reduce using rule 53 (iteration_stat)


State 142

   60 haselseif: LCB . $@8 mul_stat RCB

    $default  reduce using rule 59 ($@8)

    $@8  go to state 145


State 143

   58 haselseif: IF . LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    LB  shift, and go to state 146


State 144

   54 haselse: ELSE haselseif .

    $default  reduce using rule 54 (haselse)


State 145

   60 haselseif: LCB $@8 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 147
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 146

   58 haselseif: IF LB . expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    SUB      shift, and go to state 37
    LB       shift, and go to state 38
    ID       shift, and go to state 39
    I_CONST  shift, and go to state 40
    F_CONST  shift, and go to state 41

    expression_stat      go to state 148
    add_expression_stat  go to state 47
    mul_expression_stat  go to state 48
    factor               go to state 49


State 147

   60 haselseif: LCB $@8 mul_stat . RCB

    RCB  shift, and go to state 149


State 148

   32 expression_stat: expression_stat . relational add_expression_stat
   58 haselseif: IF LB expression_stat . RB LCB $@6 mul_stat RCB $@7 moreelseif

    MT   shift, and go to state 70
    LT   shift, and go to state 71
    MTE  shift, and go to state 72
    LTE  shift, and go to state 73
    EQ   shift, and go to state 74
    NE   shift, and go to state 75
    RB   shift, and go to state 150

    relational  go to state 77


State 149

   60 haselseif: LCB $@8 mul_stat RCB .

    $default  reduce using rule 60 (haselseif)


State 150

   58 haselseif: IF LB expression_stat RB . LCB $@6 mul_stat RCB $@7 moreelseif

    LCB  shift, and go to state 151


State 151

   58 haselseif: IF LB expression_stat RB LCB . $@6 mul_stat RCB $@7 moreelseif

    $default  reduce using rule 56 ($@6)

    $@6  go to state 152


State 152

   58 haselseif: IF LB expression_stat RB LCB $@6 . mul_stat RCB $@7 moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat            go to state 128
    declaration     go to state 17
    expression      go to state 18
    iteration_stat  go to state 19
    mul_stat        go to state 153
    print_func      go to state 20
    comment_stat    go to state 21
    type            go to state 22


State 153

   58 haselseif: IF LB expression_stat RB LCB $@6 mul_stat . RCB $@7 moreelseif

    RCB  shift, and go to state 154


State 154

   58 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB . $@7 moreelseif

    $default  reduce using rule 57 ($@7)

    $@7  go to state 155


State 155

   58 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 . moreelseif

    ELSE  shift, and go to state 156

    $default  reduce using rule 62 (moreelseif)

    moreelseif  go to state 157


State 156

   61 moreelseif: ELSE . haselseif

    LCB  shift, and go to state 142
    IF   shift, and go to state 143

    haselseif  go to state 158


State 157

   58 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif .

    $default  reduce using rule 58 (haselseif)


State 158

   61 moreelseif: ELSE haselseif .

    $default  reduce using rule 61 (moreelseif)
