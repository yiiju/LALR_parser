Terminals unused in grammar

   AND
   OR
   NOT
   LSB
   RSB
   FOR


Grammar

    0 $accept: program $end

    1 program: program stat
    2        | %empty

    3 stat: declaration
    4     | declaration_func
    5     | expression
    6     | iteration_stat
    7     | print_func
    8     | comment_stat
    9     | RET return_stat

   10 func_stat: declaration
   11          | expression
   12          | iteration_stat
   13          | print_func
   14          | comment_stat
   15          | RET return_stat

   16 func_mul_stat: func_stat func_mul_stat
   17              | func_stat

   18 return_stat: initializer SEMICOLON
   19            | expression_stat SEMICOLON

   20 func: func_parameter RB func_end
   21     | RB func_end

   22 func_end: SEMICOLON
   23         | LCB func_mul_stat RCB

   24 declaration: type ID ASGN initializer SEMICOLON
   25            | type ID SEMICOLON
   26            | type ID ASGN expression_stat SEMICOLON

   27 $@1: %empty

   28 declaration_func: type ID LB $@1 func

   29 func_parameter: func_parameter COMMA type ID
   30               | type ID

   31 func_call: func_call COMMA const
   32          | const

   33 const: S_CONST
   34      | expression_stat

   35 expression: ID asgn expression_stat SEMICOLON
   36           | ID arithmetic_postfix SEMICOLON

   37 $@2: %empty

   38 expression: ID LB func_call RB $@2 SEMICOLON
   39           | ID LB RB SEMICOLON
   40           | SEMICOLON

   41 expression_stat: expression_stat relational add_expression_stat
   42                | add_expression_stat

   43 add_expression_stat: add_expression_stat ADD mul_expression_stat
   44                    | add_expression_stat SUB mul_expression_stat
   45                    | mul_expression_stat

   46 mul_expression_stat: mul_expression_stat MUL factor
   47                    | mul_expression_stat DIV factor
   48                    | mul_expression_stat MOD factor
   49                    | factor

   50 factor: I_CONST
   51       | F_CONST
   52       | SUB I_CONST
   53       | SUB F_CONST
   54       | ID
   55       | LB expression_stat RB
   56       | ID arithmetic_postfix
   57       | ID LB func_call RB

   58 $@3: %empty

   59 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB

   60 $@4: %empty

   61 $@5: %empty

   62 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

   63 haselse: ELSE haselseif
   64        | %empty

   65 $@6: %empty

   66 $@7: %empty

   67 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

   68 $@8: %empty

   69 haselseif: LCB $@8 mul_stat RCB

   70 moreelseif: ELSE haselseif
   71           | %empty

   72 mul_stat: stat mul_stat
   73         | stat

   74 relational: MT
   75           | LT
   76           | MTE
   77           | LTE
   78           | EQ
   79           | NE

   80 print_func: PRINT LB print_type

   81 print_type: S_CONST RB SEMICOLON
   82           | ID RB SEMICOLON

   83 comment_stat: CPLUS_COMMENT
   84             | START_COMMENT END_COMMENT

   85 initializer: S_CONST
   86            | TRUE
   87            | FALSE

   88 asgn: ASGN
   89     | ADDASGN
   90     | SUBASGN
   91     | MULASGN
   92     | DIVASGN
   93     | MODASGN

   94 arithmetic_postfix: INC
   95                   | DEC

   96 type: INT
   97     | FLOAT
   98     | BOOL
   99     | STRING
  100     | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 96
FLOAT (259) 97
STRING (260) 99
BOOL (261) 98
VOID (262) 100
ADD (263) 43
SUB (264) 44 52 53
MUL (265) 46
DIV (266) 47
MOD (267) 48
INC (268) 94
DEC (269) 95
MT (270) 74
LT (271) 75
MTE (272) 76
LTE (273) 77
EQ (274) 78
NE (275) 79
ASGN (276) 24 26 88
ADDASGN (277) 89
SUBASGN (278) 90
MULASGN (279) 91
DIVASGN (280) 92
MODASGN (281) 93
AND (282)
OR (283)
NOT (284)
LB (285) 28 38 39 55 57 59 62 67 80
RB (286) 20 21 38 39 55 57 59 62 67 81 82
LCB (287) 23 59 62 67 69
RCB (288) 23 59 62 67 69
LSB (289)
RSB (290)
COMMA (291) 29 31
PRINT (292) 80
IF (293) 62 67
ELSE (294) 63 70
FOR (295)
WHILE (296) 59
ID (297) 24 25 26 28 29 30 35 36 38 39 54 56 57 82
SEMICOLON (298) 18 19 22 24 25 26 35 36 38 39 40 81 82
RET (299) 9 15
START_COMMENT (300) 84
END_COMMENT (301) 84
CPLUS_COMMENT (302) 83
I_CONST (303) 50 52
F_CONST (304) 51 53
S_CONST (305) 33 81 85
TRUE (306) 86
FALSE (307) 87


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1 2, on right: 0 1
stat (55)
    on left: 3 4 5 6 7 8 9, on right: 1 72 73
func_stat (56)
    on left: 10 11 12 13 14 15, on right: 16 17
func_mul_stat (57)
    on left: 16 17, on right: 16 23
return_stat (58)
    on left: 18 19, on right: 9 15
func (59)
    on left: 20 21, on right: 28
func_end (60)
    on left: 22 23, on right: 20 21
declaration (61)
    on left: 24 25 26, on right: 3 10
declaration_func (62)
    on left: 28, on right: 4
$@1 (63)
    on left: 27, on right: 28
func_parameter (64)
    on left: 29 30, on right: 20 29
func_call (65)
    on left: 31 32, on right: 31 38 57
const (66)
    on left: 33 34, on right: 31 32
expression (67)
    on left: 35 36 38 39 40, on right: 5 11
$@2 (68)
    on left: 37, on right: 38
expression_stat (69)
    on left: 41 42, on right: 19 26 34 35 41 55 59 62 67
add_expression_stat (70)
    on left: 43 44 45, on right: 41 42 43 44
mul_expression_stat (71)
    on left: 46 47 48 49, on right: 43 44 45 46 47 48
factor (72)
    on left: 50 51 52 53 54 55 56 57, on right: 46 47 48 49
iteration_stat (73)
    on left: 59 62, on right: 6 12
$@3 (74)
    on left: 58, on right: 59
$@4 (75)
    on left: 60, on right: 62
$@5 (76)
    on left: 61, on right: 62
haselse (77)
    on left: 63 64, on right: 62
haselseif (78)
    on left: 67 69, on right: 63 70
$@6 (79)
    on left: 65, on right: 67
$@7 (80)
    on left: 66, on right: 67
$@8 (81)
    on left: 68, on right: 69
moreelseif (82)
    on left: 70 71, on right: 67
mul_stat (83)
    on left: 72 73, on right: 59 62 67 69 72
relational (84)
    on left: 74 75 76 77 78 79, on right: 41
print_func (85)
    on left: 80, on right: 7 13
print_type (86)
    on left: 81 82, on right: 80
comment_stat (87)
    on left: 83 84, on right: 8 14
initializer (88)
    on left: 85 86 87, on right: 18 24
asgn (89)
    on left: 88 89 90 91 92 93, on right: 35
arithmetic_postfix (90)
    on left: 94 95, on right: 36 56
type (91)
    on left: 96 97 98 99 100, on right: 24 25 26 28 29 30


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . stat

    $end           shift, and go to state 2
    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat              go to state 16
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 2

    0 $accept: program $end .

    $default  accept


State 3

   96 type: INT .

    $default  reduce using rule 96 (type)


State 4

   97 type: FLOAT .

    $default  reduce using rule 97 (type)


State 5

   99 type: STRING .

    $default  reduce using rule 99 (type)


State 6

   98 type: BOOL .

    $default  reduce using rule 98 (type)


State 7

  100 type: VOID .

    $default  reduce using rule 100 (type)


State 8

   80 print_func: PRINT . LB print_type

    LB  shift, and go to state 24


State 9

   62 iteration_stat: IF . LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    LB  shift, and go to state 25


State 10

   59 iteration_stat: WHILE . LB expression_stat RB LCB $@3 mul_stat RCB

    LB  shift, and go to state 26


State 11

   35 expression: ID . asgn expression_stat SEMICOLON
   36           | ID . arithmetic_postfix SEMICOLON
   38           | ID . LB func_call RB $@2 SEMICOLON
   39           | ID . LB RB SEMICOLON

    INC      shift, and go to state 27
    DEC      shift, and go to state 28
    ASGN     shift, and go to state 29
    ADDASGN  shift, and go to state 30
    SUBASGN  shift, and go to state 31
    MULASGN  shift, and go to state 32
    DIVASGN  shift, and go to state 33
    MODASGN  shift, and go to state 34
    LB       shift, and go to state 35

    asgn                go to state 36
    arithmetic_postfix  go to state 37


State 12

   40 expression: SEMICOLON .

    $default  reduce using rule 40 (expression)


State 13

    9 stat: RET . return_stat

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45

    return_stat          go to state 46
    expression_stat      go to state 47
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50
    initializer          go to state 51


State 14

   84 comment_stat: START_COMMENT . END_COMMENT

    END_COMMENT  shift, and go to state 52


State 15

   83 comment_stat: CPLUS_COMMENT .

    $default  reduce using rule 83 (comment_stat)


State 16

    1 program: program stat .

    $default  reduce using rule 1 (program)


State 17

    3 stat: declaration .

    $default  reduce using rule 3 (stat)


State 18

    4 stat: declaration_func .

    $default  reduce using rule 4 (stat)


State 19

    5 stat: expression .

    $default  reduce using rule 5 (stat)


State 20

    6 stat: iteration_stat .

    $default  reduce using rule 6 (stat)


State 21

    7 stat: print_func .

    $default  reduce using rule 7 (stat)


State 22

    8 stat: comment_stat .

    $default  reduce using rule 8 (stat)


State 23

   24 declaration: type . ID ASGN initializer SEMICOLON
   25            | type . ID SEMICOLON
   26            | type . ID ASGN expression_stat SEMICOLON
   28 declaration_func: type . ID LB $@1 func

    ID  shift, and go to state 53


State 24

   80 print_func: PRINT LB . print_type

    ID       shift, and go to state 54
    S_CONST  shift, and go to state 55

    print_type  go to state 56


State 25

   62 iteration_stat: IF LB . expression_stat RB LCB $@4 mul_stat RCB $@5 haselse

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 57
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 26

   59 iteration_stat: WHILE LB . expression_stat RB LCB $@3 mul_stat RCB

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 58
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 27

   94 arithmetic_postfix: INC .

    $default  reduce using rule 94 (arithmetic_postfix)


State 28

   95 arithmetic_postfix: DEC .

    $default  reduce using rule 95 (arithmetic_postfix)


State 29

   88 asgn: ASGN .

    $default  reduce using rule 88 (asgn)


State 30

   89 asgn: ADDASGN .

    $default  reduce using rule 89 (asgn)


State 31

   90 asgn: SUBASGN .

    $default  reduce using rule 90 (asgn)


State 32

   91 asgn: MULASGN .

    $default  reduce using rule 91 (asgn)


State 33

   92 asgn: DIVASGN .

    $default  reduce using rule 92 (asgn)


State 34

   93 asgn: MODASGN .

    $default  reduce using rule 93 (asgn)


State 35

   38 expression: ID LB . func_call RB $@2 SEMICOLON
   39           | ID LB . RB SEMICOLON

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    RB       shift, and go to state 59
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 60

    func_call            go to state 61
    const                go to state 62
    expression_stat      go to state 63
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 36

   35 expression: ID asgn . expression_stat SEMICOLON

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 64
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 37

   36 expression: ID arithmetic_postfix . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 38

   52 factor: SUB . I_CONST
   53       | SUB . F_CONST

    I_CONST  shift, and go to state 66
    F_CONST  shift, and go to state 67


State 39

   55 factor: LB . expression_stat RB

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 68
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 40

   54 factor: ID .
   56       | ID . arithmetic_postfix
   57       | ID . LB func_call RB

    INC  shift, and go to state 27
    DEC  shift, and go to state 28
    LB   shift, and go to state 69

    $default  reduce using rule 54 (factor)

    arithmetic_postfix  go to state 70


State 41

   50 factor: I_CONST .

    $default  reduce using rule 50 (factor)


State 42

   51 factor: F_CONST .

    $default  reduce using rule 51 (factor)


State 43

   85 initializer: S_CONST .

    $default  reduce using rule 85 (initializer)


State 44

   86 initializer: TRUE .

    $default  reduce using rule 86 (initializer)


State 45

   87 initializer: FALSE .

    $default  reduce using rule 87 (initializer)


State 46

    9 stat: RET return_stat .

    $default  reduce using rule 9 (stat)


State 47

   19 return_stat: expression_stat . SEMICOLON
   41 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 71
    LT         shift, and go to state 72
    MTE        shift, and go to state 73
    LTE        shift, and go to state 74
    EQ         shift, and go to state 75
    NE         shift, and go to state 76
    SEMICOLON  shift, and go to state 77

    relational  go to state 78


State 48

   42 expression_stat: add_expression_stat .
   43 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   44                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 42 (expression_stat)


State 49

   45 add_expression_stat: mul_expression_stat .
   46 mul_expression_stat: mul_expression_stat . MUL factor
   47                    | mul_expression_stat . DIV factor
   48                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    $default  reduce using rule 45 (add_expression_stat)


State 50

   49 mul_expression_stat: factor .

    $default  reduce using rule 49 (mul_expression_stat)


State 51

   18 return_stat: initializer . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 52

   84 comment_stat: START_COMMENT END_COMMENT .

    $default  reduce using rule 84 (comment_stat)


State 53

   24 declaration: type ID . ASGN initializer SEMICOLON
   25            | type ID . SEMICOLON
   26            | type ID . ASGN expression_stat SEMICOLON
   28 declaration_func: type ID . LB $@1 func

    ASGN       shift, and go to state 85
    LB         shift, and go to state 86
    SEMICOLON  shift, and go to state 87


State 54

   82 print_type: ID . RB SEMICOLON

    RB  shift, and go to state 88


State 55

   81 print_type: S_CONST . RB SEMICOLON

    RB  shift, and go to state 89


State 56

   80 print_func: PRINT LB print_type .

    $default  reduce using rule 80 (print_func)


State 57

   41 expression_stat: expression_stat . relational add_expression_stat
   62 iteration_stat: IF LB expression_stat . RB LCB $@4 mul_stat RCB $@5 haselse

    MT   shift, and go to state 71
    LT   shift, and go to state 72
    MTE  shift, and go to state 73
    LTE  shift, and go to state 74
    EQ   shift, and go to state 75
    NE   shift, and go to state 76
    RB   shift, and go to state 90

    relational  go to state 78


State 58

   41 expression_stat: expression_stat . relational add_expression_stat
   59 iteration_stat: WHILE LB expression_stat . RB LCB $@3 mul_stat RCB

    MT   shift, and go to state 71
    LT   shift, and go to state 72
    MTE  shift, and go to state 73
    LTE  shift, and go to state 74
    EQ   shift, and go to state 75
    NE   shift, and go to state 76
    RB   shift, and go to state 91

    relational  go to state 78


State 59

   39 expression: ID LB RB . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 60

   33 const: S_CONST .

    $default  reduce using rule 33 (const)


State 61

   31 func_call: func_call . COMMA const
   38 expression: ID LB func_call . RB $@2 SEMICOLON

    RB     shift, and go to state 93
    COMMA  shift, and go to state 94


State 62

   32 func_call: const .

    $default  reduce using rule 32 (func_call)


State 63

   34 const: expression_stat .
   41 expression_stat: expression_stat . relational add_expression_stat

    MT   shift, and go to state 71
    LT   shift, and go to state 72
    MTE  shift, and go to state 73
    LTE  shift, and go to state 74
    EQ   shift, and go to state 75
    NE   shift, and go to state 76

    $default  reduce using rule 34 (const)

    relational  go to state 78


State 64

   35 expression: ID asgn expression_stat . SEMICOLON
   41 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 71
    LT         shift, and go to state 72
    MTE        shift, and go to state 73
    LTE        shift, and go to state 74
    EQ         shift, and go to state 75
    NE         shift, and go to state 76
    SEMICOLON  shift, and go to state 95

    relational  go to state 78


State 65

   36 expression: ID arithmetic_postfix SEMICOLON .

    $default  reduce using rule 36 (expression)


State 66

   52 factor: SUB I_CONST .

    $default  reduce using rule 52 (factor)


State 67

   53 factor: SUB F_CONST .

    $default  reduce using rule 53 (factor)


State 68

   41 expression_stat: expression_stat . relational add_expression_stat
   55 factor: LB expression_stat . RB

    MT   shift, and go to state 71
    LT   shift, and go to state 72
    MTE  shift, and go to state 73
    LTE  shift, and go to state 74
    EQ   shift, and go to state 75
    NE   shift, and go to state 76
    RB   shift, and go to state 96

    relational  go to state 78


State 69

   57 factor: ID LB . func_call RB

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 60

    func_call            go to state 97
    const                go to state 62
    expression_stat      go to state 63
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 70

   56 factor: ID arithmetic_postfix .

    $default  reduce using rule 56 (factor)


State 71

   74 relational: MT .

    $default  reduce using rule 74 (relational)


State 72

   75 relational: LT .

    $default  reduce using rule 75 (relational)


State 73

   76 relational: MTE .

    $default  reduce using rule 76 (relational)


State 74

   77 relational: LTE .

    $default  reduce using rule 77 (relational)


State 75

   78 relational: EQ .

    $default  reduce using rule 78 (relational)


State 76

   79 relational: NE .

    $default  reduce using rule 79 (relational)


State 77

   19 return_stat: expression_stat SEMICOLON .

    $default  reduce using rule 19 (return_stat)


State 78

   41 expression_stat: expression_stat relational . add_expression_stat

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    add_expression_stat  go to state 98
    mul_expression_stat  go to state 49
    factor               go to state 50


State 79

   43 add_expression_stat: add_expression_stat ADD . mul_expression_stat

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    mul_expression_stat  go to state 99
    factor               go to state 50


State 80

   44 add_expression_stat: add_expression_stat SUB . mul_expression_stat

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    mul_expression_stat  go to state 100
    factor               go to state 50


State 81

   46 mul_expression_stat: mul_expression_stat MUL . factor

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 101


State 82

   47 mul_expression_stat: mul_expression_stat DIV . factor

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 102


State 83

   48 mul_expression_stat: mul_expression_stat MOD . factor

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    factor  go to state 103


State 84

   18 return_stat: initializer SEMICOLON .

    $default  reduce using rule 18 (return_stat)


State 85

   24 declaration: type ID ASGN . initializer SEMICOLON
   26            | type ID ASGN . expression_stat SEMICOLON

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45

    expression_stat      go to state 104
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50
    initializer          go to state 105


State 86

   28 declaration_func: type ID LB . $@1 func

    $default  reduce using rule 27 ($@1)

    $@1  go to state 106


State 87

   25 declaration: type ID SEMICOLON .

    $default  reduce using rule 25 (declaration)


State 88

   82 print_type: ID RB . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 89

   81 print_type: S_CONST RB . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 90

   62 iteration_stat: IF LB expression_stat RB . LCB $@4 mul_stat RCB $@5 haselse

    LCB  shift, and go to state 109


State 91

   59 iteration_stat: WHILE LB expression_stat RB . LCB $@3 mul_stat RCB

    LCB  shift, and go to state 110


State 92

   39 expression: ID LB RB SEMICOLON .

    $default  reduce using rule 39 (expression)


State 93

   38 expression: ID LB func_call RB . $@2 SEMICOLON

    $default  reduce using rule 37 ($@2)

    $@2  go to state 111


State 94

   31 func_call: func_call COMMA . const

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 60

    const                go to state 112
    expression_stat      go to state 63
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 95

   35 expression: ID asgn expression_stat SEMICOLON .

    $default  reduce using rule 35 (expression)


State 96

   55 factor: LB expression_stat RB .

    $default  reduce using rule 55 (factor)


State 97

   31 func_call: func_call . COMMA const
   57 factor: ID LB func_call . RB

    RB     shift, and go to state 113
    COMMA  shift, and go to state 94


State 98

   41 expression_stat: expression_stat relational add_expression_stat .
   43 add_expression_stat: add_expression_stat . ADD mul_expression_stat
   44                    | add_expression_stat . SUB mul_expression_stat

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 41 (expression_stat)


State 99

   43 add_expression_stat: add_expression_stat ADD mul_expression_stat .
   46 mul_expression_stat: mul_expression_stat . MUL factor
   47                    | mul_expression_stat . DIV factor
   48                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    $default  reduce using rule 43 (add_expression_stat)


State 100

   44 add_expression_stat: add_expression_stat SUB mul_expression_stat .
   46 mul_expression_stat: mul_expression_stat . MUL factor
   47                    | mul_expression_stat . DIV factor
   48                    | mul_expression_stat . MOD factor

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    $default  reduce using rule 44 (add_expression_stat)


State 101

   46 mul_expression_stat: mul_expression_stat MUL factor .

    $default  reduce using rule 46 (mul_expression_stat)


State 102

   47 mul_expression_stat: mul_expression_stat DIV factor .

    $default  reduce using rule 47 (mul_expression_stat)


State 103

   48 mul_expression_stat: mul_expression_stat MOD factor .

    $default  reduce using rule 48 (mul_expression_stat)


State 104

   26 declaration: type ID ASGN expression_stat . SEMICOLON
   41 expression_stat: expression_stat . relational add_expression_stat

    MT         shift, and go to state 71
    LT         shift, and go to state 72
    MTE        shift, and go to state 73
    LTE        shift, and go to state 74
    EQ         shift, and go to state 75
    NE         shift, and go to state 76
    SEMICOLON  shift, and go to state 114

    relational  go to state 78


State 105

   24 declaration: type ID ASGN initializer . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 106

   28 declaration_func: type ID LB $@1 . func

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7
    RB      shift, and go to state 116

    func            go to state 117
    func_parameter  go to state 118
    type            go to state 119


State 107

   82 print_type: ID RB SEMICOLON .

    $default  reduce using rule 82 (print_type)


State 108

   81 print_type: S_CONST RB SEMICOLON .

    $default  reduce using rule 81 (print_type)


State 109

   62 iteration_stat: IF LB expression_stat RB LCB . $@4 mul_stat RCB $@5 haselse

    $default  reduce using rule 60 ($@4)

    $@4  go to state 120


State 110

   59 iteration_stat: WHILE LB expression_stat RB LCB . $@3 mul_stat RCB

    $default  reduce using rule 58 ($@3)

    $@3  go to state 121


State 111

   38 expression: ID LB func_call RB $@2 . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 112

   31 func_call: func_call COMMA const .

    $default  reduce using rule 31 (func_call)


State 113

   57 factor: ID LB func_call RB .

    $default  reduce using rule 57 (factor)


State 114

   26 declaration: type ID ASGN expression_stat SEMICOLON .

    $default  reduce using rule 26 (declaration)


State 115

   24 declaration: type ID ASGN initializer SEMICOLON .

    $default  reduce using rule 24 (declaration)


State 116

   21 func: RB . func_end

    LCB        shift, and go to state 123
    SEMICOLON  shift, and go to state 124

    func_end  go to state 125


State 117

   28 declaration_func: type ID LB $@1 func .

    $default  reduce using rule 28 (declaration_func)


State 118

   20 func: func_parameter . RB func_end
   29 func_parameter: func_parameter . COMMA type ID

    RB     shift, and go to state 126
    COMMA  shift, and go to state 127


State 119

   30 func_parameter: type . ID

    ID  shift, and go to state 128


State 120

   62 iteration_stat: IF LB expression_stat RB LCB $@4 . mul_stat RCB $@5 haselse

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat              go to state 129
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    mul_stat          go to state 130
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 121

   59 iteration_stat: WHILE LB expression_stat RB LCB $@3 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat              go to state 129
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    mul_stat          go to state 131
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 122

   38 expression: ID LB func_call RB $@2 SEMICOLON .

    $default  reduce using rule 38 (expression)


State 123

   23 func_end: LCB . func_mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 132
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    func_stat       go to state 133
    func_mul_stat   go to state 134
    declaration     go to state 135
    expression      go to state 136
    iteration_stat  go to state 137
    print_func      go to state 138
    comment_stat    go to state 139
    type            go to state 140


State 124

   22 func_end: SEMICOLON .

    $default  reduce using rule 22 (func_end)


State 125

   21 func: RB func_end .

    $default  reduce using rule 21 (func)


State 126

   20 func: func_parameter RB . func_end

    LCB        shift, and go to state 123
    SEMICOLON  shift, and go to state 124

    func_end  go to state 141


State 127

   29 func_parameter: func_parameter COMMA . type ID

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    VOID    shift, and go to state 7

    type  go to state 142


State 128

   30 func_parameter: type ID .

    $default  reduce using rule 30 (func_parameter)


State 129

   72 mul_stat: stat . mul_stat
   73         | stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 73 (mul_stat)

    stat              go to state 129
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    mul_stat          go to state 143
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 130

   62 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat . RCB $@5 haselse

    RCB  shift, and go to state 144


State 131

   59 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat . RCB

    RCB  shift, and go to state 145


State 132

   15 func_stat: RET . return_stat

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42
    S_CONST  shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45

    return_stat          go to state 146
    expression_stat      go to state 47
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50
    initializer          go to state 51


State 133

   16 func_mul_stat: func_stat . func_mul_stat
   17              | func_stat .

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 132
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    $default  reduce using rule 17 (func_mul_stat)

    func_stat       go to state 133
    func_mul_stat   go to state 147
    declaration     go to state 135
    expression      go to state 136
    iteration_stat  go to state 137
    print_func      go to state 138
    comment_stat    go to state 139
    type            go to state 140


State 134

   23 func_end: LCB func_mul_stat . RCB

    RCB  shift, and go to state 148


State 135

   10 func_stat: declaration .

    $default  reduce using rule 10 (func_stat)


State 136

   11 func_stat: expression .

    $default  reduce using rule 11 (func_stat)


State 137

   12 func_stat: iteration_stat .

    $default  reduce using rule 12 (func_stat)


State 138

   13 func_stat: print_func .

    $default  reduce using rule 13 (func_stat)


State 139

   14 func_stat: comment_stat .

    $default  reduce using rule 14 (func_stat)


State 140

   24 declaration: type . ID ASGN initializer SEMICOLON
   25            | type . ID SEMICOLON
   26            | type . ID ASGN expression_stat SEMICOLON

    ID  shift, and go to state 149


State 141

   20 func: func_parameter RB func_end .

    $default  reduce using rule 20 (func)


State 142

   29 func_parameter: func_parameter COMMA type . ID

    ID  shift, and go to state 150


State 143

   72 mul_stat: stat mul_stat .

    $default  reduce using rule 72 (mul_stat)


State 144

   62 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB . $@5 haselse

    $default  reduce using rule 61 ($@5)

    $@5  go to state 151


State 145

   59 iteration_stat: WHILE LB expression_stat RB LCB $@3 mul_stat RCB .

    $default  reduce using rule 59 (iteration_stat)


State 146

   15 func_stat: RET return_stat .

    $default  reduce using rule 15 (func_stat)


State 147

   16 func_mul_stat: func_stat func_mul_stat .

    $default  reduce using rule 16 (func_mul_stat)


State 148

   23 func_end: LCB func_mul_stat RCB .

    $default  reduce using rule 23 (func_end)


State 149

   24 declaration: type ID . ASGN initializer SEMICOLON
   25            | type ID . SEMICOLON
   26            | type ID . ASGN expression_stat SEMICOLON

    ASGN       shift, and go to state 85
    SEMICOLON  shift, and go to state 87


State 150

   29 func_parameter: func_parameter COMMA type ID .

    $default  reduce using rule 29 (func_parameter)


State 151

   62 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 . haselse

    ELSE  shift, and go to state 152

    $default  reduce using rule 64 (haselse)

    haselse  go to state 153


State 152

   63 haselse: ELSE . haselseif

    LCB  shift, and go to state 154
    IF   shift, and go to state 155

    haselseif  go to state 156


State 153

   62 iteration_stat: IF LB expression_stat RB LCB $@4 mul_stat RCB $@5 haselse .

    $default  reduce using rule 62 (iteration_stat)


State 154

   69 haselseif: LCB . $@8 mul_stat RCB

    $default  reduce using rule 68 ($@8)

    $@8  go to state 157


State 155

   67 haselseif: IF . LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    LB  shift, and go to state 158


State 156

   63 haselse: ELSE haselseif .

    $default  reduce using rule 63 (haselse)


State 157

   69 haselseif: LCB $@8 . mul_stat RCB

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat              go to state 129
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    mul_stat          go to state 159
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 158

   67 haselseif: IF LB . expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif

    SUB      shift, and go to state 38
    LB       shift, and go to state 39
    ID       shift, and go to state 40
    I_CONST  shift, and go to state 41
    F_CONST  shift, and go to state 42

    expression_stat      go to state 160
    add_expression_stat  go to state 48
    mul_expression_stat  go to state 49
    factor               go to state 50


State 159

   69 haselseif: LCB $@8 mul_stat . RCB

    RCB  shift, and go to state 161


State 160

   41 expression_stat: expression_stat . relational add_expression_stat
   67 haselseif: IF LB expression_stat . RB LCB $@6 mul_stat RCB $@7 moreelseif

    MT   shift, and go to state 71
    LT   shift, and go to state 72
    MTE  shift, and go to state 73
    LTE  shift, and go to state 74
    EQ   shift, and go to state 75
    NE   shift, and go to state 76
    RB   shift, and go to state 162

    relational  go to state 78


State 161

   69 haselseif: LCB $@8 mul_stat RCB .

    $default  reduce using rule 69 (haselseif)


State 162

   67 haselseif: IF LB expression_stat RB . LCB $@6 mul_stat RCB $@7 moreelseif

    LCB  shift, and go to state 163


State 163

   67 haselseif: IF LB expression_stat RB LCB . $@6 mul_stat RCB $@7 moreelseif

    $default  reduce using rule 65 ($@6)

    $@6  go to state 164


State 164

   67 haselseif: IF LB expression_stat RB LCB $@6 . mul_stat RCB $@7 moreelseif

    INT            shift, and go to state 3
    FLOAT          shift, and go to state 4
    STRING         shift, and go to state 5
    BOOL           shift, and go to state 6
    VOID           shift, and go to state 7
    PRINT          shift, and go to state 8
    IF             shift, and go to state 9
    WHILE          shift, and go to state 10
    ID             shift, and go to state 11
    SEMICOLON      shift, and go to state 12
    RET            shift, and go to state 13
    START_COMMENT  shift, and go to state 14
    CPLUS_COMMENT  shift, and go to state 15

    stat              go to state 129
    declaration       go to state 17
    declaration_func  go to state 18
    expression        go to state 19
    iteration_stat    go to state 20
    mul_stat          go to state 165
    print_func        go to state 21
    comment_stat      go to state 22
    type              go to state 23


State 165

   67 haselseif: IF LB expression_stat RB LCB $@6 mul_stat . RCB $@7 moreelseif

    RCB  shift, and go to state 166


State 166

   67 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB . $@7 moreelseif

    $default  reduce using rule 66 ($@7)

    $@7  go to state 167


State 167

   67 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 . moreelseif

    ELSE  shift, and go to state 168

    $default  reduce using rule 71 (moreelseif)

    moreelseif  go to state 169


State 168

   70 moreelseif: ELSE . haselseif

    LCB  shift, and go to state 154
    IF   shift, and go to state 155

    haselseif  go to state 170


State 169

   67 haselseif: IF LB expression_stat RB LCB $@6 mul_stat RCB $@7 moreelseif .

    $default  reduce using rule 67 (haselseif)


State 170

   70 moreelseif: ELSE haselseif .

    $default  reduce using rule 70 (moreelseif)
